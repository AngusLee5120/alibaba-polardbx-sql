create table test (id integer not null AUTO_INCREMENT primary key,col1 varchar(20),col2 decimal,col3 numeric,col4 ENUM ('value1','value2','value3'),col5 date ,col6 datetime ,col7 blob)dbpartition by hash(id) tbpartition by hash(id) tbpartitions 3

drop function if exists addfour
drop function if exists testString
drop function if exists testEnum
drop function if exists testDate
drop function if exists testBlob

create function addfour returntype bigint inputtype bigint, bigint code     public Object compute(Long a, Long b) {          return a + b;     } endcode
select addfour(1,2)
addfour(1, 2)
3

create function teststring returntype varchar inputtype varchar import import java.util.Map; endimport code     public Object compute(String a) {             return a + "suffix";     } endcode
select testString(col1) from test
testString(col1)
testsuffix

create function testenum returntype integer inputtype varchar code     public Object compute(String a) {         String[] enums = new String[]{"value2","value1","value3"};         for (int i = 0; i < 3; i++) {             if (a.equals(enums[i])) {              return i;             }         }         return -1;    } endcode
select testEnum(col4) from test
testEnum(col4)
1

create function testdate returntype date inputtype date code     public Object compute(Date a) {                 Date b = new Date(a.getTime() + 1000*60*60*24);          return b;     } endcode
select testDate(col5) from test
testDate(col5)
2006-01-13

create function testblob returntype varchar inputtype blob code     public Object compute(Blob b) { String s = ""; try {      s = new String(b.getBytes((long)1, (int)b.length()));;          } catch (Exception e) {  e.printStackTrace(); }        return s;    } endcode
select testBlob(col7) from test
testBlob(col7)
test

drop function if exists addfour
drop function if exists testString
drop function if exists testEnum
drop function if exists testDate
drop function if exists testBlob

