/*
 * Copyright [2013-2021], Alibaba Group Holding Limited
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DumperServer.proto

package com.alibaba.polardbx.rpc.cdc;

/**
 * Protobuf type {@code dumper.BinlogEvent}
 */
public final class BinlogEvent extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:dumper.BinlogEvent)
    BinlogEventOrBuilder {
private static final long serialVersionUID = 0L;
  // Use BinlogEvent.newBuilder() to construct.
  private BinlogEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private BinlogEvent() {
    logName_ = "";
    eventType_ = "";
    info_ = "";
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new BinlogEvent();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private BinlogEvent(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            String s = input.readStringRequireUtf8();

            logName_ = s;
            break;
          }
          case 16: {

            pos_ = input.readInt64();
            break;
          }
          case 26: {
            String s = input.readStringRequireUtf8();

            eventType_ = s;
            break;
          }
          case 32: {

            serverId_ = input.readInt64();
            break;
          }
          case 40: {

            endLogPos_ = input.readInt64();
            break;
          }
          case 50: {
            String s = input.readStringRequireUtf8();

            info_ = s;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return DumperServer.internal_static_dumper_BinlogEvent_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return DumperServer.internal_static_dumper_BinlogEvent_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            BinlogEvent.class, Builder.class);
  }

  public static final int LOGNAME_FIELD_NUMBER = 1;
  private volatile Object logName_;
  /**
   * <code>string logName = 1;</code>
   * @return The logName.
   */
  @Override
  public String getLogName() {
    Object ref = logName_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      logName_ = s;
      return s;
    }
  }
  /**
   * <code>string logName = 1;</code>
   * @return The bytes for logName.
   */
  @Override
  public com.google.protobuf.ByteString
      getLogNameBytes() {
    Object ref = logName_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      logName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int POS_FIELD_NUMBER = 2;
  private long pos_;
  /**
   * <code>int64 pos = 2;</code>
   * @return The pos.
   */
  @Override
  public long getPos() {
    return pos_;
  }

  public static final int EVENTTYPE_FIELD_NUMBER = 3;
  private volatile Object eventType_;
  /**
   * <code>string eventType = 3;</code>
   * @return The eventType.
   */
  @Override
  public String getEventType() {
    Object ref = eventType_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      eventType_ = s;
      return s;
    }
  }
  /**
   * <code>string eventType = 3;</code>
   * @return The bytes for eventType.
   */
  @Override
  public com.google.protobuf.ByteString
      getEventTypeBytes() {
    Object ref = eventType_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      eventType_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SERVERID_FIELD_NUMBER = 4;
  private long serverId_;
  /**
   * <code>int64 serverId = 4;</code>
   * @return The serverId.
   */
  @Override
  public long getServerId() {
    return serverId_;
  }

  public static final int ENDLOGPOS_FIELD_NUMBER = 5;
  private long endLogPos_;
  /**
   * <code>int64 endLogPos = 5;</code>
   * @return The endLogPos.
   */
  @Override
  public long getEndLogPos() {
    return endLogPos_;
  }

  public static final int INFO_FIELD_NUMBER = 6;
  private volatile Object info_;
  /**
   * <code>string info = 6;</code>
   * @return The info.
   */
  @Override
  public String getInfo() {
    Object ref = info_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      info_ = s;
      return s;
    }
  }
  /**
   * <code>string info = 6;</code>
   * @return The bytes for info.
   */
  @Override
  public com.google.protobuf.ByteString
      getInfoBytes() {
    Object ref = info_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      info_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getLogNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, logName_);
    }
    if (pos_ != 0L) {
      output.writeInt64(2, pos_);
    }
    if (!getEventTypeBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, eventType_);
    }
    if (serverId_ != 0L) {
      output.writeInt64(4, serverId_);
    }
    if (endLogPos_ != 0L) {
      output.writeInt64(5, endLogPos_);
    }
    if (!getInfoBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, info_);
    }
    unknownFields.writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getLogNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, logName_);
    }
    if (pos_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(2, pos_);
    }
    if (!getEventTypeBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, eventType_);
    }
    if (serverId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(4, serverId_);
    }
    if (endLogPos_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(5, endLogPos_);
    }
    if (!getInfoBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, info_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof BinlogEvent)) {
      return super.equals(obj);
    }
    BinlogEvent other = (BinlogEvent) obj;

    if (!getLogName()
        .equals(other.getLogName())) return false;
    if (getPos()
        != other.getPos()) return false;
    if (!getEventType()
        .equals(other.getEventType())) return false;
    if (getServerId()
        != other.getServerId()) return false;
    if (getEndLogPos()
        != other.getEndLogPos()) return false;
    if (!getInfo()
        .equals(other.getInfo())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + LOGNAME_FIELD_NUMBER;
    hash = (53 * hash) + getLogName().hashCode();
    hash = (37 * hash) + POS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getPos());
    hash = (37 * hash) + EVENTTYPE_FIELD_NUMBER;
    hash = (53 * hash) + getEventType().hashCode();
    hash = (37 * hash) + SERVERID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getServerId());
    hash = (37 * hash) + ENDLOGPOS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getEndLogPos());
    hash = (37 * hash) + INFO_FIELD_NUMBER;
    hash = (53 * hash) + getInfo().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static BinlogEvent parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static BinlogEvent parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static BinlogEvent parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static BinlogEvent parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static BinlogEvent parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static BinlogEvent parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static BinlogEvent parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static BinlogEvent parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static BinlogEvent parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static BinlogEvent parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static BinlogEvent parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static BinlogEvent parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(BinlogEvent prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code dumper.BinlogEvent}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:dumper.BinlogEvent)
      BinlogEventOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DumperServer.internal_static_dumper_BinlogEvent_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DumperServer.internal_static_dumper_BinlogEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              BinlogEvent.class, Builder.class);
    }

    // Construct using com.alibaba.polardbx.rpc.cdc.BinlogEvent.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @Override
    public Builder clear() {
      super.clear();
      logName_ = "";

      pos_ = 0L;

      eventType_ = "";

      serverId_ = 0L;

      endLogPos_ = 0L;

      info_ = "";

      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return DumperServer.internal_static_dumper_BinlogEvent_descriptor;
    }

    @Override
    public BinlogEvent getDefaultInstanceForType() {
      return BinlogEvent.getDefaultInstance();
    }

    @Override
    public BinlogEvent build() {
      BinlogEvent result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public BinlogEvent buildPartial() {
      BinlogEvent result = new BinlogEvent(this);
      result.logName_ = logName_;
      result.pos_ = pos_;
      result.eventType_ = eventType_;
      result.serverId_ = serverId_;
      result.endLogPos_ = endLogPos_;
      result.info_ = info_;
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof BinlogEvent) {
        return mergeFrom((BinlogEvent)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(BinlogEvent other) {
      if (other == BinlogEvent.getDefaultInstance()) return this;
      if (!other.getLogName().isEmpty()) {
        logName_ = other.logName_;
        onChanged();
      }
      if (other.getPos() != 0L) {
        setPos(other.getPos());
      }
      if (!other.getEventType().isEmpty()) {
        eventType_ = other.eventType_;
        onChanged();
      }
      if (other.getServerId() != 0L) {
        setServerId(other.getServerId());
      }
      if (other.getEndLogPos() != 0L) {
        setEndLogPos(other.getEndLogPos());
      }
      if (!other.getInfo().isEmpty()) {
        info_ = other.info_;
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      BinlogEvent parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (BinlogEvent) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private Object logName_ = "";
    /**
     * <code>string logName = 1;</code>
     * @return The logName.
     */
    public String getLogName() {
      Object ref = logName_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        logName_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <code>string logName = 1;</code>
     * @return The bytes for logName.
     */
    public com.google.protobuf.ByteString
        getLogNameBytes() {
      Object ref = logName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        logName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string logName = 1;</code>
     * @param value The logName to set.
     * @return This builder for chaining.
     */
    public Builder setLogName(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      logName_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string logName = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearLogName() {
      
      logName_ = getDefaultInstance().getLogName();
      onChanged();
      return this;
    }
    /**
     * <code>string logName = 1;</code>
     * @param value The bytes for logName to set.
     * @return This builder for chaining.
     */
    public Builder setLogNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      logName_ = value;
      onChanged();
      return this;
    }

    private long pos_ ;
    /**
     * <code>int64 pos = 2;</code>
     * @return The pos.
     */
    @Override
    public long getPos() {
      return pos_;
    }
    /**
     * <code>int64 pos = 2;</code>
     * @param value The pos to set.
     * @return This builder for chaining.
     */
    public Builder setPos(long value) {
      
      pos_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 pos = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearPos() {
      
      pos_ = 0L;
      onChanged();
      return this;
    }

    private Object eventType_ = "";
    /**
     * <code>string eventType = 3;</code>
     * @return The eventType.
     */
    public String getEventType() {
      Object ref = eventType_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        eventType_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <code>string eventType = 3;</code>
     * @return The bytes for eventType.
     */
    public com.google.protobuf.ByteString
        getEventTypeBytes() {
      Object ref = eventType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        eventType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string eventType = 3;</code>
     * @param value The eventType to set.
     * @return This builder for chaining.
     */
    public Builder setEventType(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      eventType_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string eventType = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearEventType() {
      
      eventType_ = getDefaultInstance().getEventType();
      onChanged();
      return this;
    }
    /**
     * <code>string eventType = 3;</code>
     * @param value The bytes for eventType to set.
     * @return This builder for chaining.
     */
    public Builder setEventTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      eventType_ = value;
      onChanged();
      return this;
    }

    private long serverId_ ;
    /**
     * <code>int64 serverId = 4;</code>
     * @return The serverId.
     */
    @Override
    public long getServerId() {
      return serverId_;
    }
    /**
     * <code>int64 serverId = 4;</code>
     * @param value The serverId to set.
     * @return This builder for chaining.
     */
    public Builder setServerId(long value) {
      
      serverId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 serverId = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearServerId() {
      
      serverId_ = 0L;
      onChanged();
      return this;
    }

    private long endLogPos_ ;
    /**
     * <code>int64 endLogPos = 5;</code>
     * @return The endLogPos.
     */
    @Override
    public long getEndLogPos() {
      return endLogPos_;
    }
    /**
     * <code>int64 endLogPos = 5;</code>
     * @param value The endLogPos to set.
     * @return This builder for chaining.
     */
    public Builder setEndLogPos(long value) {
      
      endLogPos_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 endLogPos = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearEndLogPos() {
      
      endLogPos_ = 0L;
      onChanged();
      return this;
    }

    private Object info_ = "";
    /**
     * <code>string info = 6;</code>
     * @return The info.
     */
    public String getInfo() {
      Object ref = info_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        info_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <code>string info = 6;</code>
     * @return The bytes for info.
     */
    public com.google.protobuf.ByteString
        getInfoBytes() {
      Object ref = info_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        info_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string info = 6;</code>
     * @param value The info to set.
     * @return This builder for chaining.
     */
    public Builder setInfo(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      info_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string info = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearInfo() {
      
      info_ = getDefaultInstance().getInfo();
      onChanged();
      return this;
    }
    /**
     * <code>string info = 6;</code>
     * @param value The bytes for info to set.
     * @return This builder for chaining.
     */
    public Builder setInfoBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      info_ = value;
      onChanged();
      return this;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:dumper.BinlogEvent)
  }

  // @@protoc_insertion_point(class_scope:dumper.BinlogEvent)
  private static final BinlogEvent DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new BinlogEvent();
  }

  public static BinlogEvent getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<BinlogEvent>
      PARSER = new com.google.protobuf.AbstractParser<BinlogEvent>() {
    @Override
    public BinlogEvent parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new BinlogEvent(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<BinlogEvent> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<BinlogEvent> getParserForType() {
    return PARSER;
  }

  @Override
  public BinlogEvent getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

