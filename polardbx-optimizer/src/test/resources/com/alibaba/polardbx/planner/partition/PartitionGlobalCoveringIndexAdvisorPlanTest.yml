- sql: |
    SELECT sum(l_extendedprice) / 7.0 AS avg_yearly
    FROM lineitem,
         part
    WHERE p_partkey = l_partkey
      AND p_brand = 'Brand#23'
      AND p_container = 'MED BOX'
      AND l_quantity <
        (SELECT 0.2 * avg(`l_quantity`)
         FROM lineitem
         WHERE l_partkey = p_partkey);

  plan: |
    Project(avg_yearly="$f0 / 7.0")
      HashAgg($f0="SUM(l_extendedprice)")
        Filter(condition="l_quantity < 0.2 * f16w0$o0")
          SortWindow(p_partkey="p_partkey", l_partkey="l_partkey", l_quantity="l_quantity", l_extendedprice="l_extendedprice", f4w0$o0="window#0AVG($2)", Reference Windows="window#0=window(partition {1} order by [] range between UNBOUNDED PRECEDING and UNBOUNDED PRECEDING aggs [AVG($2)])")
            MergeSort(sort="l_partkey ASC")
              IndexScan(tables="part[p1,p2,p3,p4],lineitem__what_if_gsi_l_partkey[p1,p2,p3,p4]", shardCount=4, sql="SELECT `t`.`p_partkey`, `lineitem__what_if_gsi_l_partkey`.`l_partkey`, `lineitem__what_if_gsi_l_partkey`.`l_quantity`, `lineitem__what_if_gsi_l_partkey`.`l_extendedprice` FROM (SELECT `p_partkey`, `p_name`, `p_mfgr`, `p_brand`, `p_type`, `p_size`, `p_container`, `p_retailprice`, `p_comment` FROM `part` AS `part` WHERE ((`p_brand` = 'Brand#23') AND (`p_container` = 'MED BOX'))) AS `t` INNER JOIN `lineitem__what_if_gsi_l_partkey` AS `lineitem__what_if_gsi_l_partkey` ON (`t`.`p_partkey` = `lineitem__what_if_gsi_l_partkey`.`l_partkey`) ORDER BY `lineitem__what_if_gsi_l_partkey`.`l_partkey`")

- sql: |
    select * from (select
      ps_partkey,
      sum(ps_supplycost * ps_availqty) as value
    from
      partsupp,
      supplier,
      nation
    where
      ps_suppkey = s_suppkey
      and s_nationkey = n_nationkey
      and n_name = 'GERMANY'
    group by
      ps_partkey
      )
    where
      value > (
        select
          sum(ps_supplycost * ps_availqty) * 0.0001
        from
          partsupp,
          supplier,
          nation
        where
          ps_suppkey = s_suppkey
          and s_nationkey = n_nationkey and n_name = 'GERMANY'
      )
    order by
      value desc;

  plan: |
    memsort(sort="value desc")
      project(ps_partkey="ps_partkey", value="value")
        nljoin(condition="value > $f0 * 0.0001", type="inner")
          hashagg(group="ps_partkey", value="sum(__*__)")
            gather(concurrent=true)
              indexscan(tables="supplier[p1,p2,p3,p4],nation,partsupp__what_if_gsi_ps_suppkey[p1,p2,p3,p4]", shardcount=4, sql="select `supplier`.`s_suppkey`, `partsupp__what_if_gsi_ps_suppkey`.`ps_partkey`, `partsupp__what_if_gsi_ps_suppkey`.`ps_suppkey`, (`partsupp__what_if_gsi_ps_suppkey`.`ps_supplycost` * `partsupp__what_if_gsi_ps_suppkey`.`ps_availqty`) as `__*__` from `supplier` as `supplier` inner join `nation` as `nation` on ((`supplier`.`s_nationkey` = `nation`.`n_nationkey`) and (`nation`.`n_name` = 'germany')) inner join `partsupp__what_if_gsi_ps_suppkey` as `partsupp__what_if_gsi_ps_suppkey` on (`supplier`.`s_suppkey` = `partsupp__what_if_gsi_ps_suppkey`.`ps_suppkey`)")
          hashagg($f0="sum($f0)")
            gather(concurrent=true)
              indexscan(tables="supplier[p1,p2,p3,p4],nation,partsupp__what_if_gsi_ps_suppkey[p1,p2,p3,p4]", shardcount=4, sql="select sum((`partsupp__what_if_gsi_ps_suppkey`.`ps_supplycost` * `partsupp__what_if_gsi_ps_suppkey`.`ps_availqty`)) as `$f0` from `supplier` as `supplier` inner join `nation` as `nation` on ((`supplier`.`s_nationkey` = `nation`.`n_nationkey`) and (`nation`.`n_name` = 'germany')) inner join `partsupp__what_if_gsi_ps_suppkey` as `partsupp__what_if_gsi_ps_suppkey` on (`supplier`.`s_suppkey` = `partsupp__what_if_gsi_ps_suppkey`.`ps_suppkey`)")

- sql: |
    select
    sum(l_extendedprice * (1 - l_discount) ) as revenue
    from
    lineitem,
    part where
    (

    p_partkey = l_partkey
    and p_brand = 'Brand#12'
    and p_container in ( 'SM CASE', 'SM BOX', 'SM PACK', 'SM PKG') and l_quantity >= 1 and l_quantity <= 1 + 10 and p_size between 1 and 5
    and l_shipmode in ('AIR', 'AIR REG')
    and l_shipinstruct = 'DELIVER IN PERSON'

    ) or (

    p_partkey = l_partkey
    and p_brand = 'Brand#23'
    and p_container in ('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK') and l_quantity >= 10 and l_quantity <= 20 + 10 and p_size between 1 and 10
    and l_shipmode in ('AIR', 'AIR REG')
    and l_shipinstruct = 'DELIVER IN PERSON'

    ) or
    (

    p_partkey = l_partkey
    and p_brand = 'Brand#34'
    and p_container in ( 'LG CASE', 'LG BOX', 'LG PACK', 'LG PKG') and l_quantity >= 20 and l_quantity <= 20 + 10 and p_size between 1 and 15
    and l_shipmode in ('AIR', 'AIR REG')
    and l_shipinstruct = 'DELIVER IN PERSON'

    );

  plan: |
    HashAgg(revenue="SUM(revenue)")
      Gather(concurrent=true)
        IndexScan(tables="part[p1,p2,p3,p4],lineitem__what_if_gsi_l_partkey[p1,p2,p3,p4]", shardCount=4, sql="SELECT SUM((`t0`.`l_extendedprice` * (1 - `t0`.`l_discount`))) AS `revenue` FROM (SELECT `p_partkey`, `p_name`, `p_mfgr`, `p_brand`, `p_type`, `p_size`, `p_container`, `p_retailprice`, `p_comment` FROM `part` AS `part` WHERE (((((`p_brand` = 'Brand#12') AND (`p_container` IN('SM CASE', 'SM BOX', 'SM PACK', 'SM PKG'))) AND (`p_size` BETWEEN 1 AND 5)) OR (((`p_brand` = 'Brand#23') AND (`p_container` IN('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK'))) AND (`p_size` BETWEEN 1 AND 10))) OR (((`p_brand` = 'Brand#34') AND (`p_container` IN('LG CASE', 'LG BOX', 'LG PACK', 'LG PKG'))) AND (`p_size` BETWEEN 1 AND 15)))) AS `t` INNER JOIN (SELECT `l_discount`, `l_extendedprice`, `l_linenumber`, `l_orderkey`, `l_partkey`, `l_quantity`, `l_shipinstruct`, `l_shipmode` FROM `lineitem__what_if_gsi_l_partkey` AS `lineitem__what_if_gsi_l_partkey` WHERE ((((((`l_quantity` >= 1) AND (`l_quantity` <= (1 + 10))) AND (`l_shipmode` IN('AIR', 'AIR REG'))) AND (`l_shipinstruct` = 'DELIVER IN PERSON')) OR ((((`l_quantity` >= 10) AND (`l_quantity` <= (20 + 10))) AND (`l_shipmode` IN('AIR', 'AIR REG'))) AND (`l_shipinstruct` = 'DELIVER IN PERSON'))) OR ((((`l_quantity` >= 20) AND (`l_quantity` <= (20 + 10))) AND (`l_shipmode` IN('AIR', 'AIR REG'))) AND (`l_shipinstruct` = 'DELIVER IN PERSON')))) AS `t0` ON ((`t`.`p_partkey` = `t0`.`l_partkey`) AND ((((((((((`t`.`p_partkey` = `t0`.`l_partkey`) AND (`t`.`p_brand` = 'Brand#12')) AND (`t`.`p_container` IN('SM CASE', 'SM BOX', 'SM PACK', 'SM PKG'))) AND (`t0`.`l_quantity` >= 1)) AND (`t0`.`l_quantity` <= (1 + 10))) AND (`t`.`p_size` BETWEEN 1 AND 5)) AND (`t0`.`l_shipmode` IN('AIR', 'AIR REG'))) AND (`t0`.`l_shipinstruct` = 'DELIVER IN PERSON')) OR ((((((((`t`.`p_partkey` = `t0`.`l_partkey`) AND (`t`.`p_brand` = 'Brand#23')) AND (`t`.`p_container` IN('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK'))) AND (`t0`.`l_quantity` >= 10)) AND (`t0`.`l_quantity` <= (20 + 10))) AND (`t`.`p_size` BETWEEN 1 AND 10)) AND (`t0`.`l_shipmode` IN('AIR', 'AIR REG'))) AND (`t0`.`l_shipinstruct` = 'DELIVER IN PERSON'))) OR ((((((((`t`.`p_partkey` = `t0`.`l_partkey`) AND (`t`.`p_brand` = 'Brand#34')) AND (`t`.`p_container` IN('LG CASE', 'LG BOX', 'LG PACK', 'LG PKG'))) AND (`t0`.`l_quantity` >= 20)) AND (`t0`.`l_quantity` <= (20 + 10))) AND (`t`.`p_size` BETWEEN 1 AND 15)) AND (`t0`.`l_shipmode` IN('AIR', 'AIR REG'))) AND (`t0`.`l_shipinstruct` = 'DELIVER IN PERSON'))))")

- sql: |
    select * from orders where o_custkey = 1;
  plan: |
    IndexScan(tables="orders__what_if_gsi_o_custkey[p3]", sql="SELECT `o_orderkey`, `o_custkey`, `o_orderstatus`, `o_totalprice`, `o_orderdate`, `o_orderpriority`, `o_clerk`, `o_shippriority`, `o_comment` FROM `orders__what_if_gsi_o_custkey` AS `orders__what_if_gsi_o_custkey` WHERE (`o_custkey` = 1)")

-
  sql: |
    SELECT *
    FROM test_index_join
    JOIN test_index a ON a.k1 = test_index_join.k
    JOIN test_index b ON b.k1 = test_index_join.k
    ORDER BY test_index_join.id LIMIT 100;

  plan: |

    limit(offset=0, fetch=100)
      bkajoin(condition="k1 = k and k1 = k1", type="inner")
        bkajoin(condition="k = k1", type="inner")
          mergesort(sort="id asc")
            logicalview(tables="test_index_join[p1,p2,p3,p4]", shardcount=4, sql="select `id`, `k` from `test_index_join` as `test_index_join` order by `id`")
          gather(concurrent=true)
            indexscan(tables="test_index__what_if_gsi_k1[p1,p2,p3,p4]", shardcount=4, sql="select `id`, `k1`, `k2`, `value`, `d1`, `d2`, `d3`, `d4`, `d5` from `test_index__what_if_gsi_k1` as `test_index__what_if_gsi_k1` where (`k1` in (...))")
        gather(concurrent=true)
          indexscan(tables="test_index__what_if_gsi_k1[p1,p2,p3,p4]", shardcount=4, sql="select `id`, `k1`, `k2`, `value`, `d1`, `d2`, `d3`, `d4`, `d5` from `test_index__what_if_gsi_k1` as `test_index__what_if_gsi_k1` where (`k1` in (...))")

-
  sql: |
    select * from orders where o_comment != 'DEBkaZ9T2gdU00WQkYrvnvp3Rlrqrp32mIl2b4kq'  and o_custkey in (select c_custkey from customer where c_name = 'Customer#00000112')

  plan: |
    Gather(concurrent=true)
      IndexScan(tables="orders__what_if_gsi_o_custkey[p1,p2,p3,p4],customer[p1,p2,p3,p4]", shardCount=4, sql="SELECT `o_orderkey`, `o_custkey`, `o_orderstatus`, `o_totalprice`, `o_orderdate`, `o_orderpriority`, `o_clerk`, `o_shippriority`, `o_comment` FROM `orders__what_if_gsi_o_custkey` AS `orders__what_if_gsi_o_custkey` WHERE ((`o_comment` <> 'DEBkaZ9T2gdU00WQkYrvnvp3Rlrqrp32mIl2b4kq') AND (`o_custkey` IN (SELECT `c_custkey` FROM `customer` AS `customer` WHERE (`c_name` = 'Customer#00000112'))))")

-
  sql: |
    SELECT * FROM customer left JOIN (select * from orders where o_comment != 'DEBkaZ9T2gdU00WQkYrvnvp3Rlrqrp32mIl2b4kq') a ON o_custkey = c_custkey  WHERE c_name = 'Customer#00000112'

  plan: |
    Gather(concurrent=true)
      IndexScan(tables="customer[p1,p2,p3,p4],orders__what_if_gsi_o_custkey[p1,p2,p3,p4]", shardCount=4, sql="SELECT `t`.`c_custkey`, `t`.`c_name`, `t`.`c_address`, `t`.`c_nationkey`, `t`.`c_phone`, `t`.`c_acctbal`, `t`.`c_mktsegment`, `t`.`c_comment`, `t1`.`o_orderkey`, `t1`.`o_custkey`, `t1`.`o_orderstatus`, `t1`.`o_totalprice`, `t1`.`o_orderdate`, `t1`.`o_orderpriority`, `t1`.`o_clerk`, `t1`.`o_shippriority`, `t1`.`o_comment` FROM (SELECT `c_custkey`, `c_name`, `c_address`, `c_nationkey`, `c_phone`, `c_acctbal`, `c_mktsegment`, `c_comment` FROM `customer` AS `customer` WHERE (`c_name` = 'Customer#00000112')) AS `t` LEFT JOIN (SELECT `o_orderkey`, `o_custkey`, `o_orderstatus`, `o_totalprice`, `o_orderdate`, `o_orderpriority`, `o_clerk`, `o_shippriority`, `o_comment` FROM `orders__what_if_gsi_o_custkey` AS `orders__what_if_gsi_o_custkey` WHERE (`o_comment` <> 'DEBkaZ9T2gdU00WQkYrvnvp3Rlrqrp32mIl2b4kq')) AS `t1` ON (`t`.`c_custkey` = `t1`.`o_custkey`)")

-
  sql: |
    SELECT * FROM customer where c_custkey in (select o_custkey from orders where o_comment != 'DEBkaZ9T2gdU00WQkYrvnvp3Rlrqrp32mIl2b4kq') and c_name = 'Customer#00000112'

  plan: |
    Gather(concurrent=true)
      LogicalView(tables="customer[p1,p2,p3,p4],orders__what_if_gsi_o_custkey[p1,p2,p3,p4]", shardCount=4, sql="SELECT `c_custkey`, `c_name`, `c_address`, `c_nationkey`, `c_phone`, `c_acctbal`, `c_mktsegment`, `c_comment` FROM `customer` AS `customer` WHERE ((`c_name` = 'Customer#00000112') AND (`c_custkey` IN (SELECT `o_custkey` FROM (SELECT `o_orderkey`, `o_custkey`, NULL AS `o_orderstatus`, NULL AS `o_totalprice`, NULL AS `o_orderdate`, NULL AS `o_orderpriority`, NULL AS `o_clerk`, NULL AS `o_shippriority`, `o_comment` FROM `orders__what_if_gsi_o_custkey` AS `orders__what_if_gsi_o_custkey`) AS `t` WHERE (`o_comment` <> 'DEBkaZ9T2gdU00WQkYrvnvp3Rlrqrp32mIl2b4kq'))))")

  # 3. order by 利用索引的顺序
- sql: |
    select * from test_index order by k1 limit 10;

  plan: |
    MergeSort(sort="k1 ASC", offset=0, fetch=10)
      IndexScan(tables="test_index__what_if_gsi_k1[p1,p2,p3,p4]", shardCount=4, sql="SELECT `id`, `k1`, `k2`, `value`, `d1`, `d2`, `d3`, `d4`, `d5` FROM `test_index__what_if_gsi_k1` AS `test_index__what_if_gsi_k1` ORDER BY `k1` LIMIT 10")

- sql: |
    select * from test_index order by k2 limit 10;

  plan: |
    MergeSort(sort="k2 ASC", offset=0, fetch=10)
      IndexScan(tables="test_index__what_if_gsi_k2[p1,p2,p3,p4]", shardCount=4, sql="SELECT `id`, `k1`, `k2`, `value`, `d1`, `d2`, `d3`, `d4`, `d5` FROM `test_index__what_if_gsi_k2` AS `test_index__what_if_gsi_k2` ORDER BY `k2` LIMIT 10")

  # 1.3. GSI DO NOT SUPPORT Index Merge recommendation
#- sql: |
#    select * from test_index where k2 = 10 or k1 = 10;
#
#  plan: |
#    Project(id="id", k1="k1", k2="k2", value="value", d1="d1", d2="d2", d3="d3", d4="d4", d5="d5")
#      BKAJoin(condition="id = id", type="inner")
#        HashAgg(group="id")
#          UnionAll(concurrent=true)
#            Gather(concurrent=true)
#              IndexScan(tables="optest_0000.test_index__what_if_gsi_k2", sql="SELECT `id` FROM `test_index__what_if_gsi_k2` AS `test_index__what_if_gsi_k2` WHERE (`k2` = 10)")
#            Gather(concurrent=true)
#              IndexScan(tables="optest_0000.test_index__what_if_gsi_k1", sql="SELECT `id` FROM `test_index__what_if_gsi_k1` AS `test_index__what_if_gsi_k1` WHERE (`k1` = 10)")
#        Gather(concurrent=true)
#          LogicalView(tables="[0000-0003].test_index", shardCount=4, sql="SELECT `id`, `k1`, `k2`, `value`, `d1`, `d2`, `d3`, `d4`, `d5` FROM `test_index` AS `test_index` WHERE (((`k2` = 10) OR (`k1` = 10)) AND (`id` IN (...)))")

  # 6. MIN/MAX 聚合函数利用索引
- sql: |
    select min(k1), max(k1) from test_index;

  plan: |
    HashAgg(min(k1)="MIN(min(k1))", max(k1)="MAX(max(k1))")
      Gather(concurrent=true)
        IndexScan(tables="test_index__what_if_gsi_k1[p1,p2,p3,p4]", shardCount=4, sql="SELECT MIN(`k1`) AS `min(k1)`, MAX(`k1`) AS `max(k1)` FROM `test_index__what_if_gsi_k1` AS `test_index__what_if_gsi_k1`")

  # 7. GSI join index
- sql: |
    /*+TDDL:cmd_extra(enable_post_planner=false)*/select a.*, b.k2,b.value from test_index a join test_index b on a.k1 = b.k2 where a.id = 1;

  plan: |
    BKAJoin(condition="k2 = k1", type="inner")
      LogicalView(tables="test_index[p3]", sql="SELECT `id`, `k1`, `k2`, `value`, `d1`, `d2`, `d3`, `d4`, `d5` FROM `test_index` AS `test_index` WHERE (`id` = 1)")
      Gather(concurrent=true)
        IndexScan(tables="test_index__what_if_gsi_k2[p1,p2,p3,p4]", shardCount=4, sql="SELECT `k2`, `value` FROM `test_index__what_if_gsi_k2` AS `test_index__what_if_gsi_k2` WHERE (`k2` IN (...))")

# advise a gsi covering index even with existing not-covering gsi
- sql: |
    select * from sbtest1 where k  = 1;

  plan: |
    IndexScan(tables="sbtest1__what_if_gsi_k[p5]", sql="SELECT `id`, `k`, `c`, `pad` FROM `sbtest1__what_if_gsi_k` AS `sbtest1__what_if_gsi_k` WHERE (`k` = 1)")