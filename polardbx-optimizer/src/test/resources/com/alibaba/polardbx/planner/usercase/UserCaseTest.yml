- sql: |
    select * from conversation_inbox where cid='1003:1006' and uid in ('1003@dscm.zwdingding', '1006@dscm.zwdingding');

  plan: |
    project(id="id", uid="uid", cid="cid", type="type", visible="visible", top_rank="top_rank", red_point="red_point", mute_notification="mute_notification", last_message_id="last_message_id", biz_type="biz_type", extension="extension", join_time="join_time", modify_time="modify_time", gmt_create="gmt_create", gmt_modified="gmt_modified", min_fetch_cursor="min_fetch_cursor", ctags="ctags", utags="utags", record_status="record_status", relation_status="relation_status", silence_status="silence_status", silence_end_time="silence_end_time", parent_id="parent_id")
      bkajoin(condition="expr$0 = uid", type="inner")
        hashagg(group="expr$0")
          dynamicvalues(tuples=[{ '1003@dscm.zwdingding' }, { '1006@dscm.zwdingding' }])
        gather(concurrent=true)
          logicalview(tables="[0000-0003].conversation_inbox_[0-7]", shardcount=8, sql="select `id`, `uid`, `cid`, `type`, `visible`, `top_rank`, `red_point`, `mute_notification`, `last_message_id`, `biz_type`, `extension`, `join_time`, `modify_time`, `gmt_create`, `gmt_modified`, `min_fetch_cursor`, `ctags`, `utags`, `record_status`, `relation_status`, `silence_status`, `silence_end_time`, `parent_id` from `conversation_inbox` as `conversation_inbox` where ((`cid` = '1003:1006') and (`uid` in (...)))")



- sql: |
    SELECT `tudun_copyright_industry_tort_img`.*, `tudun_project_pic`.`pic_url`, `tudun_project_pic`.`project_id`, `tudun_project_pic`.`details_url`, `tudun_project_pic`.`upload_time`, `tudun_project_pic`.`right_type`, `tudun_project_pic`.`id` AS `pid`, `tudun_project_pic`.`class_pid`, `tudun_project_pic`.`upload_uid` , `tudun_project_pic`.`class_id` FROM `tudun_copyright_industry_tort_img` LEFT JOIN `tudun_project_pic` ON tudun_copyright_industry_tort_img.self_img_id=tudun_project_pic.id WHERE 1 AND tudun_copyright_industry_tort_img.project_id = 4 AND tudun_copyright_industry_tort_img.company_id = 3063 AND tudun_project_pic.class_pid = 2 ORDER BY `tudun_copyright_industry_tort_img`.`score` LIMIT 10;

  plan: |
    project(id="id", self_img_id="self_img_id", outside_img_id="outside_img_id", score="score", company_id="company_id", right_type="right_type", project_id="project_id", task_id="task_id", add_time="add_time", pic_url="pic_url", project_id0="project_id0", details_url="details_url", upload_time="upload_time", right_type0="right_type0", pid="id0", class_pid="class_pid", upload_uid="upload_uid", class_id="class_id")
      topn(sort="score asc", offset=0, fetch=10)
        bkajoin(condition="id = self_img_id", type="inner")
          logicalview(tables="optest_0000.tudun_copyright_industry_tort_img", sql="select `id`, `self_img_id`, `outside_img_id`, `score`, `company_id`, `right_type`, `project_id`, `task_id`, `add_time` from `tudun_copyright_industry_tort_img` as `tudun_copyright_industry_tort_img` where (((`company_id` = 3063) and (`project_id` = 4)) and 1)")
          gather(concurrent=true)
            logicalview(tables="[0000-0003].tudun_project_pic_[00-63]", shardcount=64, sql="select `id`, `project_id`, `pic_url`, `upload_uid`, `details_url`, `right_type`, `class_pid`, `class_id`, `upload_time` from `tudun_project_pic` as `tudun_project_pic` where ((`class_pid` = 2) and (`id` in (...)))")


- sql: |
    SELECT tudun_copyright_industry_tort_img.*,
           `tudun_project_pic`.`pic_url`,
           `tudun_project_pic`.`project_id`,
           `tudun_project_pic`.`details_url`,
           `tudun_project_pic`.`upload_time`,
           `tudun_project_pic`.`right_type`,
           `tudun_project_pic`.`id` AS `pid`,
           `tudun_project_pic`.`class_pid`,
           `tudun_project_pic`.`upload_uid`
    FROM `tudun_copyright_industry_tort_img`
    LEFT JOIN `tudun_project_pic` ON tudun_copyright_industry_tort_img.self_img_id=tudun_project_pic.id
    WHERE 1
      AND tudun_copyright_industry_tort_img.project_id = '1'
      AND tudun_project_pic.right_type = 3
    ORDER BY `tudun_copyright_industry_tort_img`.`score`,
             `tudun_copyright_industry_tort_img`.`id` DESC LIMIT 10

  plan: |
    Project(id="id", self_img_id="self_img_id", outside_img_id="outside_img_id", score="score", company_id="company_id", right_type="right_type", project_id="project_id", task_id="task_id", add_time="add_time", pic_url="pic_url", project_id0="project_id0", details_url="details_url", upload_time="upload_time", right_type0="right_type0", pid="id0", class_pid="class_pid", upload_uid="upload_uid")
      Limit(offset=0, fetch=10)
        BKAJoin(condition="id = self_img_id", type="inner")
          LogicalView(tables="optest_0000.tudun_copyright_industry_tort_img", sql="SELECT `id`, `self_img_id`, `outside_img_id`, `score`, `company_id`, `right_type`, `project_id`, `task_id`, `add_time` FROM `tudun_copyright_industry_tort_img` AS `tudun_copyright_industry_tort_img` WHERE ((`project_id` = '1') AND 1) ORDER BY `score`, `id` DESC")
          Gather(concurrent=true)
            LogicalView(tables="[0000-0003].tudun_project_pic_[00-63]", shardCount=64, sql="SELECT `id`, `project_id`, `pic_url`, `upload_uid`, `details_url`, `right_type`, `class_pid`, `upload_time` FROM `tudun_project_pic` AS `tudun_project_pic` WHERE ((`right_type` = 3) AND (`id` IN (...)))")

- sql: |
    SELECT
           document_list.id x,
           document_list.type y
    FROM `document_goods`
    INNER JOIN `document_list` ON `document_list`.`id` = `document_goods`.`doc_id`
    INNER JOIN `client_list` ON `client_list`.`id` = `document_list`.`client_id`
    WHERE `client_list`.`vip` = 1
      AND `document_goods`.`db_id` = 22
    GROUP BY `document_goods`.`doc_id`
  plan: |
    project(x="id0", y="type")
      hashjoin(condition="id0 = doc_id", type="inner")
        project(id0="id", type="type")
          hashjoin(condition="id = client_id", type="inner")
            gather(concurrent=true)
              logicalview(tables="[0000-0003].document_list_[00-39]", shardcount=40, sql="select `id`, `type`, `client_id` from `document_list` as `document_list`")
            gather(concurrent=true)
              logicalview(tables="[0000-0003].client_list_[00-39]", shardcount=40, sql="select `id` from `client_list` as `client_list` where (`vip` = 1)")
        logicalview(tables="optest_0002.document_goods_22", sql="select `doc_id` from `document_goods` as `document_goods` where (`db_id` = 22) group by `doc_id`")

- sql: |
    SELECT H.*
        FROM (
        SELECT A.CONTACT_MAN_ID, A.CUST_ID, A.CONTACT_MAN_TYPE, A.CUST_TITLE_ID, A.CONTACT_MAN_NAME, A.SEX, A.OFFICE_PHONE, A.HOME_PHONE, A.MOBILE_PHONE, A.FAX, A.ZIPCODE, A.MAIL_ADDR, A.EMAIL_ADDR, A.MAIN_COMM, A.COMMENTS, A.CREATED_DATE, A.UPDATE_DATE, A.STATE, A.STATE_DATE, A.SP_ID, A.PARTY_TYPE, A.PARTY_CODE, A.CREATE_PARTY_TYPE, A.CREATE_PARTY_CODE, A.ACCT_ID, A.PRIMARY_FLAG, A.SUBS_ID, A.FIRST_NAME, A.SECOND_NAME, A.THIRD_NAME, A.FOUR_NAME, A.STD_ADDR_ID, A.ADDRESS, A.DEF_LANG_ID, A.CERT_ID, A.ROLE_TYPE,
          (SELECT C.ROLE_TYPE_NAME
           FROM ROLE_TYPE C
           WHERE C.ROLE_TYPE = A.ROLE_TYPE) ROLE_TYPE_NAME
        FROM CONTACT_MAN A
        LEFT JOIN CONTACT_MAN_TYPE B ON A.CONTACT_MAN_TYPE = B.CONTACT_MAN_TYPE
        WHERE 1=1
          AND A.STATE = 'A'
          AND A.ROUTING_ID = 1
          AND A.ACCT_ID = 10172) H
  plan: |
    gather(concurrent=true)
      logicalview(tables="optest_0001.role_type,contact_man_[00-31],contact_man_type", shardcount=32, sql="select `t`.`contact_man_id`, `t`.`cust_id`, `t`.`contact_man_type`, `t`.`cust_title_id`, `t`.`contact_man_name`, `t`.`sex`, `t`.`office_phone`, `t`.`home_phone`, `t`.`mobile_phone`, `t`.`fax`, `t`.`zipcode`, `t`.`mail_addr`, `t`.`email_addr`, `t`.`main_comm`, `t`.`comments`, `t`.`created_date`, `t`.`update_date`, `t`.`state`, `t`.`state_date`, `t`.`sp_id`, `t`.`party_type`, `t`.`party_code`, `t`.`create_party_type`, `t`.`create_party_code`, `t`.`acct_id`, `t`.`primary_flag`, `t`.`subs_id`, `t`.`first_name`, `t`.`second_name`, `t`.`third_name`, `t`.`four_name`, `t`.`std_addr_id`, `t`.`address`, `t`.`def_lang_id`, `t`.`cert_id`, `t`.`role_type`, (((select `role_type_name` from `role_type` as `role_type` where (`role_type` = `t`.`role_type`)))) as `role_type_name` from (select `contact_man`.`contact_man_id`, `contact_man`.`contact_man_type`, `contact_man`.`acct_id`, `contact_man`.`cust_id`, `contact_man`.`cust_title_id`, `contact_man`.`contact_man_name`, `contact_man`.`sex`, `contact_man`.`office_phone`, `contact_man`.`home_phone`, `contact_man`.`mobile_phone`, `contact_man`.`fax`, `contact_man`.`zipcode`, `contact_man`.`mail_addr`, `contact_man`.`email_addr`, `contact_man`.`main_comm`, `contact_man`.`comments`, `contact_man`.`created_date`, `contact_man`.`update_date`, `contact_man`.`party_type`, `contact_man`.`party_code`, `contact_man`.`state`, `contact_man`.`state_date`, `contact_man`.`sp_id`, `contact_man`.`create_party_code`, `contact_man`.`create_party_type`, `contact_man`.`primary_flag`, `contact_man`.`subs_id`, `contact_man`.`first_name`, `contact_man`.`second_name`, `contact_man`.`third_name`, `contact_man`.`four_name`, `contact_man`.`std_addr_id`, `contact_man`.`address`, `contact_man`.`def_lang_id`, `contact_man`.`routing_id`, `contact_man`.`contact_man_code`, `contact_man`.`cert_id`, `contact_man`.`facebook`, `contact_man`.`twitter`, `contact_man`.`instagram`, `contact_man`.`mobile_area_code`, `contact_man`.`home_area_code`, `contact_man`.`office_area_code`, `contact_man`.`mobile_verify_flag`, `contact_man`.`mobile_verify_date`, `contact_man`.`home_verify_flag`, `contact_man`.`home_verify_date`, `contact_man`.`office_verify_flag`, `contact_man`.`office_verify_date`, `contact_man`.`email_verify_flag`, `contact_man`.`email_verify_date`, `contact_man`.`role_type`, `contact_man`.`last_order_item_id`, `contact_man`.`seq`, `contact_man_type`.`contact_man_type` as `contact_man_type0`, `contact_man_type`.`contact_man_type_name`, `contact_man_type`.`comments` as `comments0`, `contact_man_type`.`sp_id` as `sp_id0`, `contact_man_type`.`share_flag`, `contact_man_type`.`contact_obj_level`, `contact_man_type`.`inherit_flag` from `contact_man` as `contact_man` left join `contact_man_type` as `contact_man_type` on (`contact_man`.`contact_man_type` = `contact_man_type`.`contact_man_type`) where ((((1 = 1) and (`contact_man`.`state` = 'a')) and (`contact_man`.`routing_id` = 1)) and (`contact_man`.`acct_id` = 10172))) as `t`")

- sql: |
   SELECT COUNT(*)
   FROM ORACLE_SALES OS,
    ORACLE_CUSTOMERS OC,
    ORACLE_PRODUCTS OP
   WHERE OS.CUST_ID = OC.CUST_ID
    AND OS.PROD_ID = OP.PROD_ID
    AND OS.QUANTITY_SOLD = ANY
    (SELECT MAX(QUANTITY_SOLD)
      FROM ORACLE_SALES IS1,
        ORACLE_CUSTOMERS IC,
        ORACLE_PRODUCTS IP
      WHERE IS1.CUST_ID = IC.CUST_ID
        AND IS1.PROD_ID = IP.PROD_ID
        AND IS1.PROD_ID = OS.PROD_ID
        AND IS1.CUST_ID = OS.CUST_ID
        AND IS1.TIME_ID = OS.TIME_ID
      GROUP BY IC.CUST_STATE_PROVINCE, (IP.PROD_CATEGORY)WITH ROLLUP)
  plan: |
    hashagg(count(*)="count()")
      project(cust_id="cust_id0", prod_id="prod_id", cust_id0="cust_id", quantity_sold="quantity_sold", time_id="time_id", prod_id0="prod_id0")
        hashjoin(condition="cust_id = cust_id and time_id = cust_id", type="inner")
          project(prod_id="prod_id0", cust_id="cust_id", quantity_sold="quantity_sold", time_id="time_id", prod_id0="prod_id")
            hashjoin(condition="prod_id = prod_id", type="inner")
              semihashjoin(condition="quantity_sold = max(quantity_sold) and prod_id = prod_id and time_id = cust_id and time_id = time_id", type="semi")
                gather(concurrent=true)
                  logicalview(tables="[0000-0003].oracle_sales_[00-15]", shardcount=16, sql="select `cust_id`, `quantity_sold`, `time_id`, `prod_id` from `oracle_sales` as `oracle_sales` where (`prod_id` is not null)")
                project(max(quantity_sold)="max(quantity_sold)", time_id="time_id", prod_id="prod_id0")
                  hashjoin(condition="prod_id = prod_id and cust_id = cust_id", type="inner")
                    hashagg(group="cust_state_province,cust_id,prod_category,prod_id")
                      nljoin(condition="true", type="inner")
                        logicalview(tables="optest_0000.oracle_customers", sql="select `cust_state_province`, `cust_id` from `oracle_customers` as `oracle_customers`")
                        logicalview(tables="optest_0000.oracle_products", sql="select `prod_category`, `prod_id` from `oracle_products` as `oracle_products`")
                    hashagg(group="cust_id,time_id,prod_id", max(quantity_sold)="max(quantity_sold)")
                      gather(concurrent=true)
                        logicalview(tables="[0000-0003].oracle_sales_[00-15]", shardcount=16, sql="select `cust_id`, `quantity_sold`, `time_id`, `prod_id` from `oracle_sales` as `oracle_sales`")
              logicalview(tables="optest_0000.oracle_products", sql="select `prod_id` from `oracle_products` as `oracle_products` where (`prod_id` is not null)")
          logicalview(tables="optest_0000.oracle_customers", sql="select `cust_id` from `oracle_customers` as `oracle_customers`")

- sql: |
    insert into orders_test_2 select * from orders_test;
  plan: |
    LogicalInsert(table="orders_test_2", columns=RecordType(INTEGER _drds_implicit_id_, INTEGER o_orderkey, INTEGER o_custkey, VARCHAR(1) o_orderstatus))
      Gather(concurrent=true)
        LogicalView(tables="[0000-0003].orders_test_[00-15]", shardCount=16, sql="SELECT 0 AS `_drds_implicit_id_`, `o_orderkey`, `o_custkey`, `o_orderstatus` FROM `orders_test` AS `orders_test`")

- sql: |
    insert into orders_test_2(o_orderkey, o_custkey, o_orderstatus) select * from orders_test;
  plan: |
    LogicalInsert(table="orders_test_2", columns=RecordType(INTEGER _drds_implicit_id_, INTEGER o_orderkey, INTEGER o_custkey, VARCHAR(1) o_orderstatus))
      Gather(concurrent=true)
        LogicalView(tables="[0000-0003].orders_test_[00-15]", shardCount=16, sql="SELECT NULL AS `_drds_implicit_id_`, `o_orderkey`, `o_custkey`, `o_orderstatus` FROM `orders_test` AS `orders_test`")

- sql: |
    insert into orders_test_2 select o_orderkey, o_custkey, o_orderstatus from orders_test;
  plan: |
    LogicalInsert(table="orders_test_2", columns=RecordType(INTEGER _drds_implicit_id_, INTEGER o_orderkey, INTEGER o_custkey, VARCHAR(1) o_orderstatus))
      Gather(concurrent=true)
        LogicalView(tables="[0000-0003].orders_test_[00-15]", shardCount=16, sql="SELECT 0 AS `_drds_implicit_id_`, `o_orderkey`, `o_custkey`, `o_orderstatus` FROM `orders_test` AS `orders_test`")

- sql: |
    insert into orders_test_2(o_orderkey, o_custkey, o_orderstatus) select o_orderkey, o_custkey, o_orderstatus from orders_test;
  plan: |
    LogicalInsert(table="orders_test_2", columns=RecordType(INTEGER _drds_implicit_id_, INTEGER o_orderkey, INTEGER o_custkey, VARCHAR(1) o_orderstatus))
      Gather(concurrent=true)
        LogicalView(tables="[0000-0003].orders_test_[00-15]", shardCount=16, sql="SELECT NULL AS `_drds_implicit_id_`, `o_orderkey`, `o_custkey`, `o_orderstatus` FROM `orders_test` AS `orders_test`")

- sql: |
    insert into orders_test_2 values('a', 'a', 1), ('a', 'a', 1);
  plan: |
    PhyTableOperation(tables="optest_0000.[orders_test_2]", sql="INSERT INTO ? (`_drds_implicit_id_`, `o_orderkey`, `o_custkey`, `o_orderstatus`) VALUES(?, ?, 'a', 1),(?, ?, 'a', 1)", params="`orders_test_2`,1,a,2,a")

- sql: |
    insert into orders_test_2 values('a', 'a', 1), ('a', 'a', 1), ('b', 'a', 1), ('3', 'a', 1);
  plan: |
    PhyTableOperation(tables="optest_0000.[orders_test_2]", sql="INSERT INTO ? (`_drds_implicit_id_`, `o_orderkey`, `o_custkey`, `o_orderstatus`) VALUES(?, ?, 'a', 1),(?, ?, 'a', 1),(?, ?, 'a', 1)", params="`orders_test_2`,3,a,4,a,5,b")
    PhyTableOperation(tables="optest_0003.[orders_test_2]", sql="INSERT INTO ? (`_drds_implicit_id_`, `o_orderkey`, `o_custkey`, `o_orderstatus`) VALUES(?, ?, 'a', 1)", params="`orders_test_2`,6,3")

- sql: |
    SELECT 'aa' AS column_0,
           layer_0_left_tb.tinyint_test AS column_1,
           (~(layer_0_left_tb.datetime_test)) AS column_2,
           layer_0_left_tb.tinyint_1bit_test AS column_3,
           layer_0_left_tb.tinyint_1bit_test AS column_4,
           count(*)AS ag_column_fun
    FROM corona_select_multi_db_one_tb AS layer_0_left_tb
    LEFT JOIN
      (SELECT tinyint_1bit_test AS layer_0_column_0,
              NULL AS layer_0_column_1
       FROM corona_select_one_db_one_tb
       GROUP BY 1,
                2
       ORDER BY 1,
                2 LIMIT 91,
                        84) AS layer_0_right_tb ON (layer_0_left_tb.year_test=layer_0_left_tb.datetime_test)
    WHERE (ROW(3, 4) IN (ROW(1, 2),
                         ROW(3, 5)))
    GROUP BY column_0 ,
             column_1 ASC,
             column_2 ,
             column_3 DESC,
             column_4 HAVING (ag_column_fun>87)
    ORDER BY column_0 ,
             column_1 ASC,
             column_2 ,
             column_3 DESC,
             column_4 ,
             ag_column_fun LIMIT 0,
                                 90;
  plan: |
    project(column_0="column_0", column_1="column_1", column_2="column_2", column_3="column_4", column_4="column_4", ag_column_fun="ag_column_fun")
      limit(offset=0, fetch=90)
        memsort(sort="column_0 asc,column_1 asc,column_2 asc,column_4 desc,column_4 asc,ag_column_fun asc")
          filter(condition="ag_column_fun > 87")
            hashagg(group="column_0,column_1,column_2,column_4", ag_column_fun="count()")
              project(column_0="'aa'", column_1="tinyint_test", column_2="~", column_4="tinyint_1bit_test")
                nljoin(condition="=", type="right")
                  logicalview(tables="optest_0000.corona_select_one_db_one_tb", sql="select `tinyint_1bit_test` as `layer_0_column_0` from `corona_select_one_db_one_tb` as `corona_select_one_db_one_tb` group by `tinyint_1bit_test`, null order by `tinyint_1bit_test`, null limit 84 offset 91")
                  gather(concurrent=true)
                    logicalview(tables="[0000-0003].corona_select_multi_db_one_tb", shardcount=4, sql="select `tinyint_test`, `tinyint_1bit_test`, (~ `datetime_test`) as `~`, (`year_test` = `datetime_test`) as `=` from `corona_select_multi_db_one_tb` as `corona_select_multi_db_one_tb` where (((3, 4)) in((1, 2),(3, 5)))")
- sql: |
   SELECT  M.BC_MEMBER_ID, M.CUST_ID, M.ACCT_ID, M.SUBS_ID, M.BC_MEMBER_TYPE_ID, M.SP_ID, M.STATE, S.PREFIX,  S.ACC_NBR, S.USER_ID, S.SUBS_PLAN_ID, S.PROD_STATE,         CASE H.STATE WHEN 'X' THEN NULL ELSE H.CONTACT_MAN_NAME END AS CONTACT_MAN_NAME,       K.CONTACT_MAN_TYPE_NAME ,H.STATE AS CONTACT_MAN_STATE,M.INDIVIDUAL_ACCT_ID, M.MEMBER_ROUTING_ID       FROM BC_MEMBER M, ALL_CUST C INNER JOIN ALL_SUBS S ON C.CUST_ID = S.CUST_ID AND C.ROUTING_ID = S.ROUTING_ID          LEFT JOIN PROD_ATTR_VALUE F on S.SUBS_ID = F.PROD_ID    LEFT JOIN MANAGER_CONTACT_MAN H on S.SUBS_ID = H.SUBS_ID  AND H.CONTACT_MAN_TYPE = 808 AND H.STATE = 'A'   LEFT JOIN CONTACT_MAN_TYPE K on H.CONTACT_MAN_TYPE = K.CONTACT_MAN_TYPE WHERE M.CUST_ID = C.CUST_ID  AND M.SUBS_ID = S.SUBS_ID  AND  M.BC_MEMBER_ID = (SELECT MAX(BC_MEMBER_ID) FROM BC_MEMBER F WHERE F.SUBS_ID = M.SUBS_ID)      AND M.SUBS_ID = 1025523         AND M.STATE = 'A'              LIMIT 0, 100;
  plan: |
    project(bc_member_id="bc_member_id", cust_id="cust_id", acct_id="acct_id", subs_id="subs_id", bc_member_type_id="bc_member_type_id", sp_id="sp_id", state="state", prefix="prefix", acc_nbr="acc_nbr", user_id="user_id", subs_plan_id="subs_plan_id", prod_state="prod_state", contact_man_name="case", contact_man_type_name="contact_man_type_name", contact_man_state="state0", individual_acct_id="individual_acct_id", member_routing_id="member_routing_id")
      limit(offset=0, fetch=100)
        hashjoin(condition="subs_id0 = prod_id", type="left")
          project(bc_member_id="bc_member_id", cust_id="cust_id", acct_id="acct_id", subs_id="subs_id", bc_member_type_id="bc_member_type_id", state="state", sp_id="sp_id", individual_acct_id="individual_acct_id", member_routing_id="member_routing_id", cust_id0="cust_id0", subs_id0="subs_id0", prefix="prefix", acc_nbr="acc_nbr", user_id="user_id", subs_plan_id="subs_plan_id", prod_state="prod_state", subs_id1="subs_id1", contact_man_type="contact_man_type", state0="state0", case="case", contact_man_type0="contact_man_type0", contact_man_type_name="contact_man_type_name", subs_id2="subs_id2", max(bc_member_id)="max(bc_member_id)")
            hashjoin(condition="contact_man_type = contact_man_type", type="left")
              project(bc_member_id="bc_member_id", cust_id="cust_id0", acct_id="acct_id", subs_id="subs_id2", bc_member_type_id="bc_member_type_id", state="state0", sp_id="sp_id", individual_acct_id="individual_acct_id", member_routing_id="member_routing_id", cust_id0="cust_id", subs_id0="subs_id", prefix="prefix", acc_nbr="acc_nbr", user_id="user_id", subs_plan_id="subs_plan_id", prod_state="prod_state", subs_id1="subs_id1", contact_man_type="contact_man_type", state0="state", case="case", subs_id2="subs_id0", max(bc_member_id)="max(bc_member_id)")
                limit(fetch=100)
                  hashjoin(condition="subs_id = subs_id0 and max(bc_member_id) = bc_member_id and subs_id = subs_id and cust_id = cust_id", type="inner")
                    project(cust_id="cust_id", subs_id="subs_id", prefix="prefix", acc_nbr="acc_nbr", user_id="user_id", subs_plan_id="subs_plan_id", prod_state="prod_state", subs_id1="subs_id1", contact_man_type="contact_man_type", state="state", case="case", subs_id0="subs_id0", max(bc_member_id)="max(bc_member_id)")
                      hashjoin(condition="subs_id = subs_id", type="left")
                        hashjoin(condition="subs_id = subs_id", type="inner")
                          logicalview(tables="optest_0000.all_cust,all_subs", sql="select `all_cust`.`cust_id`, `all_subs`.`subs_id`, `all_subs`.`prefix`, `all_subs`.`acc_nbr`, `all_subs`.`user_id`, `all_subs`.`subs_plan_id`, `all_subs`.`prod_state` from `all_cust` as `all_cust` inner join `all_subs` as `all_subs` on ((`all_cust`.`cust_id` = `all_subs`.`cust_id`) and (`all_cust`.`routing_id` = `all_subs`.`routing_id`)) where (`all_subs`.`subs_id` = 1025523)")
                          filter(condition="subs_id = 1025523")
                            hashagg(group="subs_id", max(bc_member_id)="max(max(bc_member_id))")
                              gather(concurrent=true)
                                logicalview(tables="[0000-0003].bc_member_[00-31]", shardcount=128, sql="select `subs_id`, max(`bc_member_id`) as `max(bc_member_id)` from `bc_member` as `bc_member` group by `subs_id`")
                        gather(concurrent=true)
                          logicalview(tables="[0000-0003].manager_contact_man", shardcount=4, sql="select `subs_id`, `contact_man_type`, `state`, (case when (`state` = 'x') then null else `contact_man_name` end) as `case` from `manager_contact_man` as `manager_contact_man` where (((`contact_man_type` = 808) and (`state` = 'a')) and (`subs_id` = 1025523))")
                    gather(concurrent=true)
                      logicalview(tables="[0000-0003].bc_member_[00-31]", shardcount=128, sql="select `bc_member_id`, `cust_id`, `acct_id`, `subs_id`, `bc_member_type_id`, `state`, `sp_id`, `individual_acct_id`, `member_routing_id` from `bc_member` as `bc_member` where ((`subs_id` = 1025523) and (`state` = 'a'))")
              logicalview(tables="optest_0000.contact_man_type", sql="select `contact_man_type`, `contact_man_type_name` from `contact_man_type` as `contact_man_type`")
          gather(concurrent=true)
            logicalview(tables="[0000-0003].prod_attr_value_[00-31]", shardcount=128, sql="select `prod_id` from `prod_attr_value` as `prod_attr_value` where (`prod_id` = 1025523)")
- sql: |
    SELECT `record_id`,

      (SELECT yyyymmdd
       FROM
         (SELECT yyyymmdd
          FROM `optest`.`card_scan_record`
          WHERE ((`record_id` > 53489)
                 OR ((`record_id` = 53489)))
            AND ((`record_id` < 54488)
                 OR ((`record_id` = 54488)))
          ORDER BY `record_id` ASC LIMIT 1000) t
       WHERE yyyymmdd = '20201030' LIMIT 1) AS isNeedDml
    FROM `optest`.`card_scan_record`
    WHERE ((`record_id` > 53489)
           OR ((`record_id` = 53489)))
      AND ((`record_id` < 54488)
           OR ((`record_id` = 54488)))
    ORDER BY `record_id` ASC LIMIT 1
    OFFSET 999;
  plan: |
    LogicalView(tables="optest_0000.card_scan_record,card_scan_record", sql="SELECT `card_scan_record`.`record_id`, (((SELECT `t`.`yyyymmdd` FROM (SELECT `card_scan_record`.`yyyymmdd` FROM `card_scan_record` AS `card_scan_record` WHERE (((`card_scan_record`.`record_id` > 53489) OR (`card_scan_record`.`record_id` = 53489)) AND ((`card_scan_record`.`record_id` < 54488) OR (`card_scan_record`.`record_id` = 54488))) ORDER BY `card_scan_record`.`record_id` LIMIT 1000 OFFSET 0) AS `t` WHERE (`t`.`yyyymmdd` = '20201030') LIMIT 1 OFFSET 0))) AS `isNeedDml` FROM `card_scan_record` AS `card_scan_record` WHERE (((`card_scan_record`.`record_id` > 53489) OR (`card_scan_record`.`record_id` = 53489)) AND ((`card_scan_record`.`record_id` < 54488) OR (`card_scan_record`.`record_id` = 54488))) ORDER BY `record_id` LIMIT 1 OFFSET 999")

- sql: |
    SELECT
      IFNULL(SUM(oi.items_pay_amount), 0) AS all_amount,
      oi.user_id
    FROM
      fr_order_items oi
    LEFT JOIN fr_orders o ON o.id = oi.order_id
    WHERE
      o.order_tags = 'BB'
    AND o.stock_at IS NOT NULL
    AND DATE_FORMAT(o.pay_at, '%Y-%m') = '2020-10'
    AND o.trade_state != 'NULLIFY'
    AND oi.is_platform != 1
    AND oi.suit_goods_id IS NULL
    AND oi.agent_id = 462263
    GROUP BY
      oi.user_id
  plan: |
    Project(all_amount="IFNULL($f1, CAST(0))", user_id="user_id")
      HashAgg(group="user_id", $f1="SUM(items_pay_amount)")
        BKAJoin(condition="id = order_id", type="inner")
          Gather(concurrent=true)
            LogicalView(tables="[0000-0003].fr_order_items_[00-63]", shardCount=64, sql="SELECT `order_id`, `user_id`, `items_pay_amount` FROM `fr_order_items` AS `fr_order_items` WHERE (((`agent_id` = 462263) AND (`is_platform` <> 1)) AND (`suit_goods_id` IS NULL))")
          Gather(concurrent=true)
            LogicalView(tables="[0000-0003].fr_orders", shardCount=4, sql="SELECT `id` FROM `fr_orders` AS `fr_orders` WHERE ((((('2020-10' = DATE_FORMAT(`pay_at`, '%Y-%m')) AND (`order_tags` = 'BB')) AND (`stock_at` IS NOT NULL)) AND (`trade_state` <> 'NULLIFY')) AND (`id` IN (...)))")

- sql: |
    SELECT
      IFNULL(SUM(oi.items_pay_amount), 0) AS all_amount,
      oi.user_id
    FROM
      fr_order_items oi
    LEFT JOIN fr_orders o ON o.id = oi.order_id
    WHERE
       o.stock_at IS NOT NULL
    AND DATE_FORMAT(o.pay_at, '%Y-%m') = '2020-10'
    AND o.trade_state != 'NULLIFY'
    AND oi.is_platform != 1
    AND oi.suit_goods_id IS NULL
    AND oi.agent_id = 462263
    GROUP BY
      oi.user_id
  plan: |
    Project(all_amount="IFNULL($f1, CAST(0))", user_id="user_id")
      HashAgg(group="user_id", $f1="SUM(items_pay_amount)")
        BKAJoin(condition="id = order_id", type="inner")
          Gather(concurrent=true)
            LogicalView(tables="[0000-0003].fr_order_items_[00-63]", shardCount=64, sql="SELECT `order_id`, `user_id`, `items_pay_amount` FROM `fr_order_items` AS `fr_order_items` WHERE (((`agent_id` = 462263) AND (`is_platform` <> 1)) AND (`suit_goods_id` IS NULL))")
          Gather(concurrent=true)
            LogicalView(tables="[0000-0003].fr_orders", shardCount=4, sql="SELECT `id` FROM `fr_orders` AS `fr_orders` WHERE (((('2020-10' = DATE_FORMAT(`pay_at`, '%Y-%m')) AND (`stock_at` IS NOT NULL)) AND (`trade_state` <> 'NULLIFY')) AND (`id` IN (...)))")

- sql: |
    select   * from   ordersnapshot where   snapshotId = (     select       snapshotId     from       orderbuyer     where       orderId= 8110704933435112  limit 1 ) limit   100;
  plan: |
    mergesort(sort="", offset=0, fetch=100)
      logicalview(tables="[0000-0003].ordersnapshot_[000-511]", shardcount=512, sql="select `snapshotid`, `extra`, `created`, `updated`, `isdeleted` from `ordersnapshot` as `ordersnapshot` where (`snapshotid` = ?) limit 100")

    >> individual scalar subquery :
    IndexScan(tables="optest_0001.order_g_i_orderId_232", sql="SELECT `snapshotId` FROM `order_g_i_orderId` AS `order_g_i_orderId` WHERE (`orderId` = 8110704933435112) LIMIT 1")

- sql: |
    select a.stor_id,@rownum:=@rownum+1 as rownum
    from
    (select * from md_stor
    ORDER BY stor_id) a ,(SELECT @rownum:=0) t
  plan: |
    LogicalView(tables="optest_0000.md_stor", sql="SELECT `a`.`stor_id`, (@rownum := (@rownum + 1)) AS `rownum` FROM (SELECT `md_stor`.`stor_id`, `md_stor`.`be_id`, `md_stor`.`parent_id`, `md_stor`.`stor_code`, `md_stor`.`stor_name`, `md_stor`.`stor_abbreviation`, `md_stor`.`stor_scope`, `md_stor`.`stor_type`, `md_stor`.`charge_man`, `md_stor`.`org_code`, `md_stor`.`tax_no`, `md_stor`.`open_date`, `md_stor`.`stor_category`, `md_stor`.`stor_head`, `md_stor`.`flag_franchise`, `md_stor`.`close_date`, `md_stor`.`business_area`, `md_stor`.`employee_qty`, `md_stor`.`region_id`, `md_stor`.`address`, `md_stor`.`branch_level`, `md_stor`.`payment`, `md_stor`.`settle_unit`, `md_stor`.`contact_id`, `md_stor`.`account_id`, `md_stor`.`status`, `md_stor`.`cus_phone`, `md_stor`.`db_version`, `md_stor`.`last_time`, `md_stor`.`last_user`, `md_stor`.`ins_time`, `md_stor`.`ins_user`, `md_stor`.`is_in_sys`, `md_stor`.`brand_company_id`, `md_stor`.`KONG_GU`, `md_stor`.`NET_ID`, `md_stor`.`CIGARETT_ID`, `md_stor`.`be_id_rule_xrf`, `md_stor`.`be_code_rule_xrf`, `md_stor`.`real_stor_id`, `md_stor`.`brand_group_id`, `md_stor`.`stor_group_code`, `md_stor`.`longitude`, `md_stor`.`latitude`, `md_stor`.`stor_group_id`, `md_stor`.`company_code`, `md_stor`.`company_name`, `md_stor`.`bg_id`, `md_stor`.`area_code`, `md_stor`.`area_name`, `md_stor`.`sub_area_code`, `md_stor`.`sub_area_name`, `md_stor`.`stor_brand`, `md_stor`.`province_code`, `md_stor`.`city_code`, `md_stor`.`network_status`, `md_stor`.`remarks`, `md_stor`.`stor_code_rule`, `md_stor`.`priv_ctrl_level` FROM `md_stor` AS `md_stor` ORDER BY `stor_id`) AS `a`, (SELECT (@rownum := 0) AS `@rownum := 0`) AS `t`")

- sql: |
    SELECT 1 FROM bq_measure_point d JOIN q_rp_baseinfo_meter j ON j.MPED_ID = d.mped_id AND d.shard_no = j.shard_no
    WHERE j.data_date = '20210117' limit 10
  plan: |
    Limit(offset=0, fetch=10)
      Project(1="1")
        HashJoin(condition="SHARD_NO = SHARD_NO AND MPED_ID = MPED_ID", type="inner")
          Gather(concurrent=true)
            LogicalView(tables="[0000-0003].q_rp_baseinfo_meter_017", shardCount=4, sql="SELECT `MPED_ID`, `SHARD_NO` FROM `q_rp_baseinfo_meter` AS `q_rp_baseinfo_meter` WHERE (`DATA_DATE` = '20210117')")
          Gather(concurrent=true)
            LogicalView(tables="[0000-0003].bq_measure_point", shardCount=4, sql="SELECT `MPED_ID`, `SHARD_NO` FROM `bq_measure_point` AS `bq_measure_point`")

- sql: |
    SELECT 1 FROM q_rp_baseinfo_meter a JOIN p_date p JOIN e_mp_day_read b ON a.shard_no = b.shard_no AND a.mped_id = b.id AND p.data_date = b.data_date AND b.data_type = '1' WHERE a.shard_no = '11401' AND a.data_date = '20210117' AND p.data_date IN ('20200916', '20200917', '20200918', '20200919', '20200920', '20200921', '20200922') LIMIT 10;
  plan: |
    Limit(offset=0, fetch=10)
      Project(1="1")
        HashJoin(condition="DATA_DATE = DATA_DATE", type="inner")
          Project(ID="ID", DATA_DATE="DATA_DATE", SHARD_NO="SHARD_NO0", MPED_ID="MPED_ID", SHARD_NO0="SHARD_NO")
            BKAJoin(condition="SHARD_NO = SHARD_NO AND MPED_ID = ID", type="inner")
              LogicalView(tables="optest_0001.q_rp_baseinfo_meter_017", sql="SELECT `MPED_ID`, `SHARD_NO` FROM `q_rp_baseinfo_meter` AS `q_rp_baseinfo_meter` WHERE ((`SHARD_NO` = '11401') AND (`DATA_DATE` = '20210117'))")
              Gather(concurrent=true)
                LogicalView(tables="optest_0001.e_mp_day_read_[260-266]", shardCount=7, sql="SELECT `ID`, `DATA_DATE`, `SHARD_NO` FROM `e_mp_day_read` AS `e_mp_day_read` WHERE ((((`SHARD_NO` = '11401') AND (`DATA_TYPE` = '1')) AND (`DATA_DATE` IN('20200916', '20200917', '20200918', '20200919', '20200920', '20200921', '20200922'))) AND (((`SHARD_NO`, `ID`)) IN (...)))")
          LogicalView(tables="optest_0000.p_date", sql="SELECT `DATA_DATE` FROM `p_date` AS `p_date` WHERE (`DATA_DATE` IN('20200916', '20200917', '20200918', '20200919', '20200920', '20200921', '20200922'))")


- sql: |
    SELECT aa.*, bb.paytypename FROM ( SELECT a.billno, a.subweb_id, CASE WHEN a.billtype in (0,1) THEN CONVERT ( ( SUM(a.`amount` * a.`inorout` *- 1) ), CHAR (16) ) WHEN a.billtype in (21,22,23,24) THEN onl.realsaleamount END realsaleamount, CASE WHEN a.billtype in (0,1) THEN CONVERT ( ( SUM( a.`amount` * a.`inorout` *- 1 ) - SUM( a.`costamount` * a.`inorout` *- 1 ) ), char ( 16 ) ) WHEN a.billtype in (21,22,23,24) THEN CONVERT ( (onl.realsaleamount - SUM( a.`costamount` * a.`inorout` *- 1 ) ), char ( 16 ) ) END maoli, SUM( a.`amount` * a.`inorout` *- 1 ) saleamount, SUM( a.`costamount` * a.`inorout` *- 1 ) costamount, SUM( a.`quantity` * a.`inorout` *- 1 ) quantity, sum(case when a.billtype in (0,1) then sd.curprice else a.price end ) price, case when b.is_wstjoin = 2 then CONCAT( 'D', LPAD( SUBSTRING_INDEX( b.region, ',', 1 ), 2, 0 ), b.subweb_id ) else CONCAT( 'Q', LPAD( SUBSTRING_INDEX( b.region, ',', 1 ), 2, 0 ), b.subweb_id ) end subwebcode, b.name storename, ( select name from datadictionary where tableName='stockflowhistory' and value=a.billtype and field='billtype' )saletype, ifnull( ( case when s.old_ref !='' then '是' else '否' end ), '否' ) is_pos, case when a.billtype in (0,1 ) then a.billdate else onl.accountdate end billdate FROM stockflowhistory a left join storeconfig b on a.`subweb_id` = b.`subweb_id` left join onlinesalerecords onl on onl.billno=a.billno and a.subweb_id=onl.subweb_id left join salerecords s on s.billno=a.billno and s.subweb_id=a.subweb_id left join salerecordsdetail sd on sd.pid=s.id and s.subweb_id=sd.subweb_id and a.productid=sd.productid WHERE b.`is_wstjoin` = 2 AND a.`billtype` in ( 0, 1, 21, 22, 23, 24 ) and a.billdate >= '2020-10-08 00:00:00' and a.billdate <= '2020-10-08 23:59:59' and a.billtype in (0,1,21,22,23,24) GROUP BY a.billno, a.subweb_id, a.billtype ) aa LEFT JOIN ( SELECT a.billno, a.subweb_id, GROUP_CONCAT( c.`name` ) paytypename FROM salepaydetail a, storeconfig b, paytype c WHERE a.`subweb_id` = b.`subweb_id` AND b.`is_wstjoin` = 2 AND a.`paytypeId` = c.`id` GROUP BY a.billno, a.subweb_id ) bb ON aa.billno = bb.billno AND aa.subweb_id = bb.subweb_id ORDER BY aa.billdate desc;
  plan: |
    memsort(sort="billdate desc")
      project(billno="billno", subweb_id="subweb_id", realsaleamount="case(in($2, row(0, 1)), cast($3):char(16) character set "utf-8" collate "utf8_general_ci", in($2, row(21, 22, 23, 24)), cast($4):varchar(2000) character set "utf-8" collate "utf8_general_ci", null)", maoli="case(in($2, row(0, 1)), cast(-($3, $5)):char(16) character set "utf-8" collate "utf8_general_ci", in($2, row(21, 22, 23, 24)), cast(-($4, $5)):char(16) character set "utf-8" collate "utf8_general_ci", null)", saleamount="saleamount", costamount="costamount", quantity="quantity", price="price", subwebcode="case(=($8, 2), concat('d', lpad(substring_index($9, ',', 1), 2, 0), $10), concat('q', lpad(substring_index($9, ',', 1), 2, 0), $10))", storename="storename", saletype="name", is_pos="ifnull(case(<>($12, ''), '是', '否'), '否')", billdate="case(in($2, row(0, 1)), $13, $14)", paytypename="paytypename", cor=[$cor])
        hashjoin(condition="billno = billno and subweb_id = subweb_id", type="left")
          semibkajoin(condition="value = billtype", type="left")
            gather(concurrent=true)
              logicalview(tables="[0000-0003].stockflowhistory,storeconfig,onlinesalerecords,salerecords,salerecordsdetail", shardcount=4, sql="select `stockflowhistory`.`billno`, `stockflowhistory`.`subweb_id`, `stockflowhistory`.`billtype`, sum(((`stockflowhistory`.`amount` * `stockflowhistory`.`inorout`) * -1)) as `saleamount`, (`onlinesalerecords`.`realsaleamount`) as `$f4`, sum(((`stockflowhistory`.`costamount` * `stockflowhistory`.`inorout`) * -1)) as `costamount`, sum(((`stockflowhistory`.`quantity` * `stockflowhistory`.`inorout`) * -1)) as `quantity`, sum((case when (`stockflowhistory`.`billtype` in(0, 1)) then `salerecordsdetail`.`curprice` else `stockflowhistory`.`price` end)) as `price`, (`storeconfig`.`is_wstjoin`) as `$f8`, (`storeconfig`.`region`) as `$f9`, (`storeconfig`.`subweb_id`) as `$f10`, (`storeconfig`.`name`) as `storename`, (`salerecords`.`old_ref`) as `$f12`, (`stockflowhistory`.`billdate`) as `$f13`, (`onlinesalerecords`.`accountdate`) as `$f14` from `stockflowhistory` as `stockflowhistory` left join `storeconfig` as `storeconfig` on (`stockflowhistory`.`subweb_id` = `storeconfig`.`subweb_id`) left join `onlinesalerecords` as `onlinesalerecords` on ((`stockflowhistory`.`billno` = `onlinesalerecords`.`billno`) and (`stockflowhistory`.`subweb_id` = `onlinesalerecords`.`subweb_id`)) left join `salerecords` as `salerecords` on ((`stockflowhistory`.`billno` = `salerecords`.`billno`) and (`stockflowhistory`.`subweb_id` = `salerecords`.`subweb_id`)) left join `salerecordsdetail` as `salerecordsdetail` on (((`salerecords`.`id` = `salerecordsdetail`.`pid`) and (`salerecords`.`subweb_id` = `salerecordsdetail`.`subweb_id`)) and (`stockflowhistory`.`productid` = `salerecordsdetail`.`productid`)) where ((((`storeconfig`.`is_wstjoin` = 2) and (`stockflowhistory`.`billtype` in(0, 1, 21, 22, 23, 24))) and (`stockflowhistory`.`billdate` >= '2020-10-08 00:00:00')) and (`stockflowhistory`.`billdate` <= '2020-10-08 23:59:59')) group by `stockflowhistory`.`billno`, `stockflowhistory`.`subweb_id`, `stockflowhistory`.`billtype`")
            logicalview(tables="optest_0000.datadictionary", sql="select `name`, `value` from `datadictionary` as `datadictionary` where ((((`tablename` = 'stockflowhistory') and (`field` = 'billtype')) and (`value` in(0, 1, 21, 22, 23, 24))) and (`value` in (...)))")
          gather(concurrent=true)
            logicalview(tables="[0000-0003].salepaydetail,storeconfig,paytype", shardcount=4, sql="select `salepaydetail`.`billno`, `salepaydetail`.`subweb_id`, group_concat(`paytype`.`name`  ) as `paytypename` from `salepaydetail` as `salepaydetail` inner join `storeconfig` as `storeconfig` on ((`storeconfig`.`is_wstjoin` = 2) and (`salepaydetail`.`subweb_id` = `storeconfig`.`subweb_id`)) inner join `paytype` as `paytype` on (`salepaydetail`.`paytypeid` = `paytype`.`id`) group by `salepaydetail`.`billno`, `salepaydetail`.`subweb_id`")

- sql: |
    /*+TDDL:CMD_EXTRA(ENABLE_POST_PLANNER=FALSE)*/select * from (select a.OPENID,a.ID,a.`NAME`,a.MOBILE,a.BIRTHDAY,a.WEIXINNAME,a.ISFOLLOWWX,a.CONVERTMEMBERFLAG, ct.`NAME` as CTNAME,a.TOTALCONSUMPTION,SUM(cc.GoShopNumber)as GOSHOPNUMBER, date_format(DATE_SUB(date_format(concat(date_format(NOW(),'%Y'),'-',a.birthday),'%Y-%m-%d'),INTERVAL st.remindday day),'%Y-%m-%d') as REMINDTIME, (case WHEN IFNULL(a.ID,0) !='0' then DATE_FORMAT(NOW(),'%Y-%m-%d') WHEN IFNULL(a.ID,0) ='0' then NULL END)as NOWDATE, DATE_FORMAT(MAX(cc.LASTSHOPTIME),'%Y-%m-%d')as LASTSHOPTIME,MIN(cc.FIRSTSHOPTIME)as FIRSTSHOPTIME, (case WHEN IFNULL(a.ID,0) !='0' then s.`NAME` WHEN IFNULL(a.ID,0) ='0' then NULL END) as SHOPNAME,a.SHOPID, ifnull(sp.STATE,1)as STATE,vis.recordgroupid as REMINDRECORDGROUPID from erp_mem_customer a left join erp_wx_subscribepeople sp on sp.serviceid='13e608bc7144493887ec6f04d15c36b3' and sp.openid=a.openid and sp.delflag=0 left join erp_mem_carddata cd on cd.customerid = a.id and cd.state<2 and cd.delflag = 0 and cd.serviceid='13e608bc7144493887ec6f04d15c36b3' left join erp_basic_cardtype ct on ct.id=cd.cardtypeid and ct.serviceid='13e608bc7144493887ec6f04d15c36b3' and ct.DELFLAG=0 left join Erp_Mem_Customercar cc on cc.CustomerId = a.Id and cc.DelFlag = 0 and cc.serviceid='13e608bc7144493887ec6f04d15c36b3' join erp_wx_remindset st on st.shopid=a.shopid and st.serviceid='13e608bc7144493887ec6f04d15c36b3' and st.ItemRemindType=2 and RemindType=6 and ifnull(st.remindday,-1) <> '-1' join erp_sys_shop s on a.shopid=s.id and s.state = 0 and s.delflag = 0 and s.serviceid='13e608bc7144493887ec6f04d15c36b3' left join( select a.VisCreateTime,a.serviceid,a.remindobject,a.itemremindtype,a.shopid,b.nextremindddate,b.recordgroupid,b.isnext from( select max(a.createtime) as VisCreateTime,serviceid,remindobject,itemremindtype,shopid from erp_wx_remindvisit a where serviceid='13e608bc7144493887ec6f04d15c36b3' and shopid='c24952a123cf46b3890f74ee4e8adeea' and state=0 and delflag=0 and remindtype=6 group by serviceid,remindobject,itemremindtype,shopid ) a join erp_wx_remindvisit b on a.VisCreateTime=b.createtime and a.serviceid=b.serviceid and b.remindtype=6 where 1=1 ) vis on vis.serviceid='13e608bc7144493887ec6f04d15c36b3' and st.itemremindtype=vis.itemremindtype and a.id=vis.remindobject where a.delflag=0 and a.Birthday is not null and (vis.isnext is null or (vis.isnext=1 and vis.recordgroupid is not null )) and (vis.VisCreateTime is null or date_format(now(),'%Y-%m-%d')>=date_format(vis.nextremindddate,'%Y-%m-%d')) and date_format(DATE_SUB(date_format(concat(date_format(NOW(),'%Y'),'-',a.birthday),'%Y-%m-%d'),INTERVAL st.remindday day),'%Y-%m-%d')<= date_format(NOW(),'%Y-%m-%d') and a.serviceid='13e608bc7144493887ec6f04d15c36b3' and a.id='2910271ecc0d4092ae00f4a00ea4aa32' and date_format(DATE_SUB(date_format(concat(date_format(NOW(),'%Y'),'-',a.birthday),'%Y-%m-%d'),INTERVAL st.remindday day),'%Y-%m-%d') >= '2020-10-01' and date_format(DATE_SUB(date_format(concat(date_format(NOW(),'%Y'),'-',a.birthday),'%Y-%m-%d'),INTERVAL st.remindday day),'%Y-%m-%d') <='2020-10-31 23:59:59' and a.shopId = 'c24952a123cf46b3890f74ee4e8adeea' group by a.OPENID,a.ID,a.`NAME`,a.MOBILE,a.BIRTHDAY,a.WEIXINNAME,a.ISFOLLOWWX,a.CONVERTMEMBERFLAG,ct.`NAME`,IFNULL(a.TOTALCONSUMPTION,0),date_format(DATE_SUB(date_format(a.birthday,'%Y-%m-%d'),INTERVAL st.remindday day),'%m-%d'),DATE_FORMAT(NOW(),'%Y-%m-%d'),s.`NAME`,a.SHOPID,sp.STATE)a LIMIT 0, 10000;
  plan: |
    limit(offset=0, fetch=10000)
      project(openid="openid", id="id", name="name", mobile="mobile", birthday="birthday", weixinname="weixinname", isfollowwx="isfollowwx", convertmemberflag="convertmemberflag", ctname="ctname", totalconsumption="totalconsumption", goshopnumber="goshopnumber", remindtime="date_format(date_sub(date_format(concat(date_format(now(), '%y'), '-', birthday), '%y-%m-%d'), interval_primary($f17, day)), '%y-%m-%d')", nowdate="case(<>(ifnull($1, cast(0):varchar(2000) character set "utf-8" collate "utf8_general_ci" not null), '0'), $11, =(ifnull($1, cast(0):varchar(2000) character set "utf-8" collate "utf8_general_ci" not null), '0'), null, null)", lastshoptime="date_format($f18, '%y-%m-%d')", firstshoptime="firstshoptime", shopname="case(<>(ifnull($1, cast(0):varchar(2000) character set "utf-8" collate "utf8_general_ci" not null), '0'), $12, =(ifnull($1, cast(0):varchar(2000) character set "utf-8" collate "utf8_general_ci" not null), '0'), null, null)", shopid="shopid", state="ifnull(state0, 1)", remindrecordgroupid="remindrecordgroupid")
        hashagg(group="openid,id,name,mobile,birthday,weixinname,isfollowwx,convertmemberflag,ctname,$f9,$f10,$f11,name1,shopid,state0", totalconsumption="__first_value(totalconsumption)", goshopnumber="sum(goshopnumber)", $f17="__first_value(remindday)", $f18="max(lastshoptime)", firstshoptime="min(firstshoptime)", remindrecordgroupid="__first_value(recordgroupid)")
          project(openid="openid", id="id1", name="name0", mobile="mobile0", birthday="birthday", weixinname="weixinname", isfollowwx="isfollowwx", convertmemberflag="convertmemberflag", ctname="name00", $f9="ifnull(totalconsumption, cast(0))", $f10="date_format(date_sub(date_format(birthday, '%y-%m-%d'), interval_primary(remindday, day)), '%m-%d')", $f11="date_format(now(), '%y-%m-%d')", name1="name", shopid="shopid0", state0="state1", totalconsumption="totalconsumption", goshopnumber="goshopnumber", remindday="remindday", lastshoptime="lastshoptime", firstshoptime="firstshoptime", recordgroupid="recordgroupid")
            filter(condition="(is null(isnext) or (isnext = 1 and is not null(recordgroupid))) and (is null(viscreatetime) or date_format(now(), '%y-%m-%d') >= date_format(nextremindddate, '%y-%m-%d'))")
              hashjoin(condition="itemremindtype = itemremindtype and id1 = remindobject", type="left")
                hashjoin(condition="shopid = shopid and id0 = shopid and date_format(date_sub(date_format, interval_primary(remindday, day)), '%y-%m-%d') <= date_format(now(), '%y-%m-%d') and date_format(date_sub(date_format, interval_primary(remindday, day)), '%y-%m-%d') >= '2020-10-01' and date_format(date_sub(date_format, interval_primary(remindday, day)), '%y-%m-%d') <= '2020-10-31 23:59:59'", type="inner")
                  gather(concurrent=true)
                    logicalview(tables="optest_0000.erp_wx_remindset_00,erp_sys_shop_00", sql="select `erp_wx_remindset`.`id`, `erp_wx_remindset`.`code`, `erp_wx_remindset`.`serviceid`, `erp_wx_remindset`.`createtime`, `erp_wx_remindset`.`creatorid`, `erp_wx_remindset`.`creator`, `erp_wx_remindset`.`companyid`, `erp_wx_remindset`.`shopid`, `erp_wx_remindset`.`publicnumberid`, `erp_wx_remindset`.`sort`, `erp_wx_remindset`.`remindtype`, `erp_wx_remindset`.`remindday`, `erp_wx_remindset`.`remindway`, `erp_wx_remindset`.`remindcontent`, `erp_wx_remindset`.`remindobject`, `erp_wx_remindset`.`delflag`, `erp_wx_remindset`.`itemid`, `erp_wx_remindset`.`itemremindtype`, `erp_wx_remindset`.`state`, `erp_wx_remindset`.`remark`, `erp_wx_remindset`.`festival`, `erp_wx_remindset`.`festivaldate`, `erp_wx_remindset`.`operationtime`, `erp_wx_remindset`.`operatorempid`, `erp_wx_remindset`.`applyshopid`, `erp_wx_remindset`.`remindspace`, `erp_sys_shop`.`id` as `id0`, `erp_sys_shop`.`serviceid` as `serviceid0`, `erp_sys_shop`.`code` as `code0`, `erp_sys_shop`.`createtime` as `createtime0`, `erp_sys_shop`.`creatorid` as `creatorid0`, `erp_sys_shop`.`creator` as `creator0`, `erp_sys_shop`.`companyid` as `companyid0`, `erp_sys_shop`.`name`, `erp_sys_shop`.`simplename`, `erp_sys_shop`.`prefix`, `erp_sys_shop`.`spellname`, `erp_sys_shop`.`province`, `erp_sys_shop`.`city`, `erp_sys_shop`.`county`, `erp_sys_shop`.`address`, `erp_sys_shop`.`telephone`, `erp_sys_shop`.`fax`, `erp_sys_shop`.`mobile`, `erp_sys_shop`.`mail`, `erp_sys_shop`.`url`, `erp_sys_shop`.`principal`, `erp_sys_shop`.`achievementindex`, `erp_sys_shop`.`amountimprest`, `erp_sys_shop`.`imprest`, `erp_sys_shop`.`amounthostelrent`, `erp_sys_shop`.`amountshoprent`, `erp_sys_shop`.`shoptype`, `erp_sys_shop`.`areacode`, `erp_sys_shop`.`areapath`, `erp_sys_shop`.`messagecount`, `erp_sys_shop`.`orderid`, `erp_sys_shop`.`showachiflag`, `erp_sys_shop`.`memuseshops`, `erp_sys_shop`.`smsmobile`, `erp_sys_shop`.`constructionnumber`, `erp_sys_shop`.`severcost`, `erp_sys_shop`.`servertimed`, `erp_sys_shop`.`state` as `state0`, `erp_sys_shop`.`delflag` as `delflag0`, `erp_sys_shop`.`remark` as `remark0`, `erp_sys_shop`.`domainurl`, `erp_sys_shop`.`shoplogo`, `erp_sys_shop`.`longitude`, `erp_sys_shop`.`latitude`, `erp_sys_shop`.`infodetail`, `erp_sys_shop`.`isachievementnotice`, `erp_sys_shop`.`achievementnoticetime`, `erp_sys_shop`.`industrytype` from `erp_wx_remindset` as `erp_wx_remindset` inner join `erp_sys_shop` as `erp_sys_shop` on ((((((((((`erp_sys_shop`.`serviceid` = '13e608bc7144493887ec6f04d15c36b3') and (`erp_wx_remindset`.`serviceid` = `erp_sys_shop`.`serviceid`)) and (`erp_wx_remindset`.`serviceid` = '13e608bc7144493887ec6f04d15c36b3')) and (`erp_wx_remindset`.`shopid` = `erp_sys_shop`.`id`)) and (`erp_wx_remindset`.`itemremindtype` = 2)) and (`erp_sys_shop`.`delflag` = `erp_sys_shop`.`state`)) and (`erp_sys_shop`.`delflag` = 0)) and (`erp_sys_shop`.`state` = 0)) and (`erp_wx_remindset`.`remindtype` = 6)) and (ifnull(`erp_wx_remindset`.`remindday`, -1) <> '-1')) where (((`erp_wx_remindset`.`shopid` = `erp_sys_shop`.`id`) and (`erp_wx_remindset`.`shopid` = 'c24952a123cf46b3890f74ee4e8adeea')) and (`erp_sys_shop`.`id` = 'c24952a123cf46b3890f74ee4e8adeea'))")
                  project(id="id", shopid="shopid", name="name", birthday="birthday", mobile="mobile", weixinname="weixinname", isfollowwx="isfollowwx", totalconsumption="totalconsumption", convertmemberflag="convertmemberflag", openid="openid", date_format="date_format", openid0="openid0", state="state", customerid="customerid", cardtypeid="cardtypeid", id0="id0", name0="name0", customerid0="customerid0", lastshoptime="lastshoptime", firstshoptime="firstshoptime", goshopnumber="goshopnumber")
                    hashjoin(condition="openid = openid", type="left")
                      hashjoin(condition="customerid = id", type="left")
                        hashjoin(condition="id = cardtypeid", type="left")
                          hashjoin(condition="customerid = id", type="left", build="left")
                            logicalview(tables="optest_0000.erp_mem_customer_00", sql="select `id`, `shopid`, `name`, `birthday`, `mobile`, `weixinname`, `isfollowwx`, `totalconsumption`, `convertmemberflag`, `openid`, date_format(concat(date_format(now(), '%y'), '-', `birthday`), '%y-%m-%d') as `date_format` from `erp_mem_customer` as `erp_mem_customer` where (((((`delflag` = 0) and (`id` = '2910271ecc0d4092ae00f4a00ea4aa32')) and (`serviceid` = '13e608bc7144493887ec6f04d15c36b3')) and (`shopid` = 'c24952a123cf46b3890f74ee4e8adeea')) and (`birthday` is not null))")
                            logicalview(tables="optest_0000.erp_mem_carddata_00", sql="select `customerid`, `cardtypeid` from `erp_mem_carddata` as `erp_mem_carddata` where ((((`state` < 2) and (`delflag` = 0)) and (`serviceid` = '13e608bc7144493887ec6f04d15c36b3')) and (`customerid` = '2910271ecc0d4092ae00f4a00ea4aa32'))")
                          logicalview(tables="optest_0000.erp_basic_cardtype_00", sql="select `id`, `name` from `erp_basic_cardtype` as `erp_basic_cardtype` where ((`serviceid` = '13e608bc7144493887ec6f04d15c36b3') and (`delflag` = 0))")
                        logicalview(tables="optest_0000.erp_mem_customercar_00", sql="select `customerid`, `lastshoptime`, `firstshoptime`, `goshopnumber` from `erp_mem_customercar` as `erp_mem_customercar` where (((`delflag` = 0) and (`serviceid` = '13e608bc7144493887ec6f04d15c36b3')) and (`customerid` = '2910271ecc0d4092ae00f4a00ea4aa32'))")
                      logicalview(tables="optest_0000.erp_wx_subscribepeople_00", sql="select `openid`, `state` from `erp_wx_subscribepeople` as `erp_wx_subscribepeople` where ((`serviceid` = '13e608bc7144493887ec6f04d15c36b3') and (`delflag` = 0))")
                gather(concurrent=true)
                  logicalview(tables="optest_0000.erp_wx_remindvisit_00", sql="select `t1`.`viscreatetime`, `t1`.`remindobject` as `remindobject`, `t1`.`itemremindtype` as `itemremindtype`, `t2`.`nextremindddate` as `nextremindddate`, `t2`.`recordgroupid` as `recordgroupid`, `t2`.`isnext` as `isnext` from (select `serviceid`, `shopid`, `remindobject`, `itemremindtype`, max(`createtime`) as `viscreatetime` from `erp_wx_remindvisit` as `erp_wx_remindvisit` where (((((`serviceid` = '13e608bc7144493887ec6f04d15c36b3') and (`shopid` = 'c24952a123cf46b3890f74ee4e8adeea')) and (`state` = 0)) and (`delflag` = 0)) and (`remindtype` = 6)) group by `serviceid`, `shopid`, `remindobject`, `itemremindtype` having ((((1 = 1) and (`serviceid` = '13e608bc7144493887ec6f04d15c36b3')) and (`itemremindtype` = 2)) and (`remindobject` = '2910271ecc0d4092ae00f4a00ea4aa32'))) as `t1` inner join (select `id`, `code`, `serviceid`, `createtime`, `creatorid`, `creator`, `companyid`, `shopid`, `publicnumberid`, `remindtype`, `carnumber`, `remindway`, `remindcontent`, `remindobject`, `satisfaction`, `delflag`, `state`, `remark`, `itemremindtype`, `itemid`, `itemname`, `customermarkettype`, `expireddate`, `reminddate`, `cardnumber`, `cardtypeid`, `isnext`, `recordgroupid`, `nextremindddate` from `erp_wx_remindvisit` as `erp_wx_remindvisit0` where ((`remindtype` = 6) and (`serviceid` = '13e608bc7144493887ec6f04d15c36b3'))) as `t2` on ((`t1`.`serviceid` = `t2`.`serviceid`) and (`t1`.`viscreatetime` = `t2`.`createtime`))")

- sql: |
    SELECT a.MPED_ID mpedId,
           a.MPED_NAME mpedName,
           b.CP_NO cpNo,
           b.CP_NAME cpName,
           b.ASSET_NO assetNo,
           c.CONS_NO consNo,
           c.CONS_NAME consName,
           c.ELEC_ADDR elecAddr,
           e.mp_no mpNo,
           e.mp_name mpName
    FROM R_MPED a
    JOIN R_TMNL_INFO b ON a.TERMINAL_ID = b.TERMINAL_ID
    AND a.SHARD_NO = b.SHARD_NO
    JOIN C_CONS c ON a.CONS_ID = c.CONS_ID
    AND a.SHARD_NO = c.SHARD_NO
    JOIN C_METER_MP_RELA d ON a.METER_ID = d.METER_ID
    AND a.SHARD_NO = d.SHARD_NO
    JOIN C_MP e ON d.MP_ID = e.MP_ID
    AND a.SHARD_NO = e.SHARD_NO
    WHERE 1 = 1
      AND a.PROTOCOL_ID IN (2,
                            3,
                            8)
      AND (b.shard_no,
           b.terminal_id) IN
        (SELECT shard_no,
                obj_id
         FROM R_CUSTOM_GROUP_DETAIL rc
         WHERE rc.GROUP_ID = '100003') LIMIT 100
  plan: |
    MergeSort(sort="", offset=0, fetch=100)
      LogicalView(tables="[0000-0003].r_mped,r_tmnl_info,c_cons,c_meter_mp_rela,c_mp,r_custom_group_detail", shardCount=4, sql="SELECT `R_MPED`.`MPED_ID` AS `mpedId`, `R_MPED`.`MPED_NAME` AS `mpedName`, `R_TMNL_INFO`.`CP_NO` AS `cpNo`, `R_TMNL_INFO`.`CP_NAME` AS `cpName`, `R_TMNL_INFO`.`ASSET_NO` AS `assetNo`, `C_CONS`.`CONS_NO` AS `consNo`, `C_CONS`.`CONS_NAME` AS `consName`, `C_CONS`.`ELEC_ADDR` AS `elecAddr`, `C_MP`.`mp_no` AS `mpNo`, `C_MP`.`mp_name` AS `mpName` FROM `R_MPED` AS `R_MPED` INNER JOIN `R_TMNL_INFO` AS `R_TMNL_INFO` ON ((((`R_MPED`.`TERMINAL_ID` = `R_TMNL_INFO`.`TERMINAL_ID`) AND (`R_MPED`.`SHARD_NO` = `R_TMNL_INFO`.`SHARD_NO`)) AND (1 = 1)) AND (`R_MPED`.`PROTOCOL_ID` IN(2, 3, 8))) INNER JOIN `C_CONS` AS `C_CONS` ON (((`R_MPED`.`CONS_ID` = `C_CONS`.`CONS_ID`) AND (`R_TMNL_INFO`.`SHARD_NO` = `C_CONS`.`SHARD_NO`)) AND (`R_MPED`.`SHARD_NO` = `C_CONS`.`SHARD_NO`)) INNER JOIN `C_METER_MP_RELA` AS `C_METER_MP_RELA` ON ((((`R_TMNL_INFO`.`SHARD_NO` = `C_METER_MP_RELA`.`shard_no`) AND (`R_MPED`.`SHARD_NO` = `C_METER_MP_RELA`.`shard_no`)) AND (`C_CONS`.`SHARD_NO` = `C_METER_MP_RELA`.`shard_no`)) AND (`R_MPED`.`METER_ID` = `C_METER_MP_RELA`.`meter_id`)) INNER JOIN `C_MP` AS `C_MP` ON (((((`C_METER_MP_RELA`.`mp_id` = `C_MP`.`mp_id`) AND (`R_TMNL_INFO`.`SHARD_NO` = `C_MP`.`shard_no`)) AND (`R_MPED`.`SHARD_NO` = `C_MP`.`shard_no`)) AND (`C_METER_MP_RELA`.`shard_no` = `C_MP`.`shard_no`)) AND (`C_CONS`.`SHARD_NO` = `C_MP`.`shard_no`)) WHERE ((`R_TMNL_INFO`.`SHARD_NO`, `R_TMNL_INFO`.`TERMINAL_ID`) IN (SELECT `SHARD_NO` AS `shard_no`, `OBJ_ID` AS `obj_id` FROM `R_CUSTOM_GROUP_DETAIL` AS `R_CUSTOM_GROUP_DETAIL` WHERE (`GROUP_ID` = '100003'))) LIMIT 100")

- sql: |
    SELECT t.ORG_NO,
           t.METER_ID,
           t.ASSET_NO,
           q.MANUFACTURER_CODE,
           q.INST_DATE,
           d.DATA_DATE,
           t.TERMINAL_ID,
           t.TMNL_ASSET_NO,
           q.FACTORY_CODE,
           t.OFFSET_MINUTE,
           t.SET_TIME,
           t.COLL_TIME,
           q.CONS_NO,
           q.CONS_NAME,
           q.TG_NO,
           q.TG_NAME,
           d.CONS_TYPE,
           d.IF_FIREV,
           d.CLOCK_DIFF
    FROM t_metclock_inspect_detail t
    JOIN q_rp_baseinfo_meter q ON t.shard_no = q.shard_no
    AND t.meter_id = q.meter_id
    LEFT JOIN q_meter_clock_result_det d ON t.inspect_id = d.inspect_id
    AND d.shard_no = t.shard_no
    AND t.meter_id = d.meter_id
    WHERE q.data_date = '20210117'
      AND t.shard_no = '11401'
      AND t.org_no LIKE CONCAT('11401', '%')
      AND d.data_date >= STR_TO_DATE('2020-09-01 00:00:00', '%Y-%m-%d')
      AND d.data_date < STR_TO_DATE('2020-10-01 00:00:00', '%Y-%m-%d')
      AND d.cons_type = '01' LIMIT 10;
  plan: |
    limit(offset=0, fetch=10)
      project(org_no="org_no", meter_id="meter_id0", asset_no="asset_no", manufacturer_code="manufacturer_code", inst_date="inst_date", data_date="data_date", terminal_id="terminal_id", tmnl_asset_no="tmnl_asset_no", factory_code="factory_code", offset_minute="offset_minute", set_time="set_time", coll_time="coll_time", cons_no="cons_no", cons_name="cons_name", tg_no="tg_no", tg_name="tg_name", cons_type="cons_type", if_firev="if_firev", clock_diff="clock_diff")
        bkajoin(condition="shard_no = shard_no0 and shard_no = shard_no and meter_id = meter_id and meter_id0 = meter_id", type="inner")
          bkajoin(condition="shard_no = shard_no and meter_id = meter_id and inspect_id = inspect_id", type="inner")
            logicalview(tables="optest_0001.q_meter_clock_result_det", sql="select `meter_id`, `inspect_id`, `data_date`, `cons_type`, `if_firev`, `clock_diff`, `shard_no` from `q_meter_clock_result_det` as `q_meter_clock_result_det` where ((((`shard_no` = '11401') and (`cons_type` = '01')) and (`data_date` >= str_to_date('2020-09-01 00:00:00', '%y-%m-%d'))) and (`data_date` < str_to_date('2020-10-01 00:00:00', '%y-%m-%d')))")
            gather(concurrent=true)
              logicalview(tables="optest_0001.t_metclock_inspect_detail_[00-11]", shardcount=12, sql="select `inspect_id`, `org_no`, `tmnl_asset_no`, `asset_no`, `meter_id`, `terminal_id`, `set_time`, `coll_time`, `offset_minute`, `shard_no` from `t_metclock_inspect_detail` as `t_metclock_inspect_detail` where (((`shard_no` = '11401') and (`org_no` like concat('11401', '%'))) and (((`shard_no`, `meter_id`, `inspect_id`)) in (...)))")
          logicalview(tables="optest_0001.q_rp_baseinfo_meter_017", sql="select `meter_id`, `cons_no`, `cons_name`, `factory_code`, `manufacturer_code`, `inst_date`, `shard_no`, `tg_no`, `tg_name` from `q_rp_baseinfo_meter` as `q_rp_baseinfo_meter` where (((`shard_no` = '11401') and (`data_date` = '20210117')) and (((`shard_no`, `meter_id`)) in (...)))")

- sql: |
    SELECT `order_no`,`service_type`,`price_type`,`itemcate_id`,`customer`,`cellphone`,`price`,`worker_price`,`status`,`province`,`city`,`area`,`town`,`address`,`appointment_time`,`created_at`,`user_id`,`expect_date`,`hangup_times`,`add_price`,`refund_price`,`discount_price`,`reduced_price`,`worker_id` FROM `b2c_order` FORCE INDEX ( g_i_order_worker_id )  WHERE  `worker_id` = 87624  AND `created_at` > '2019-08-17 00:00:00'  AND `status` = 20 ORDER BY `appointment_time` ASC,`created_at` ASC LIMIT 0,15;
  plan: |
    topn(sort="appointment_time asc,created_at asc", offset=0, fetch=15)
      project(order_no="order_no", service_type="service_type", price_type="price_type", itemcate_id="itemcate_id", customer="customer", cellphone="cellphone", price="price", worker_price="worker_price", status="status", province="province", city="city", area="area", town="town", address="address", appointment_time="appointment_time", created_at="created_at", user_id="user_id", expect_date="expect_date", hangup_times="hangup_times", add_price="add_price", refund_price="refund_price", discount_price="discount_price", reduced_price="reduced_price", worker_id="worker_id")
        bkajoin(condition="(id = id and created_at <=> created_at) and user_id <=> user_id", type="inner")
          indexscan(tables="optest_0001.g_i_order_worker_id_08", sql="select `id`, `customer`, `cellphone`, `user_id`, `worker_id`, `created_at` from `g_i_order_worker_id` as `g_i_order_worker_id` where ((`worker_id` = 87624) and (`created_at` > '2019-08-17 00:00:00'))")
          gather(concurrent=true)
            logicalview(tables="[0000-0003].b2c_order_[0-7]", shardcount=32, sql="select `id`, `order_no`, `itemcate_id`, `price_type`, `service_type`, `user_id`, `expect_date`, `price`, `add_price`, `worker_price`, `refund_price`, `province`, `city`, `area`, `town`, `address`, `status`, `hangup_times`, `appointment_time`, `created_at`, `discount_price`, `reduced_price` from `b2c_order` as `b2c_order` where ((((`worker_id` = 87624) and (`created_at` > '2019-08-17 00:00:00')) and (`status` = 20)) and (`id` in (...)))")

- sql: |
    SELECT PN,AN,FAMN,DBNAME,SIMVAL,(@i := @i + 1) sortNo FROM PS_RESULT_CACHE_ENTITY,(select @i :=1) b   WHERE 1=1    AND TASK_ID = 1      AND uId = 1        ORDER BY SIMVAL DESC,FAMN    LIMIT 1,1;
  plan: |
    project(pn="pn", an="an", famn="famn", dbname="dbname", simval="simval", sortno="@i := @i + 1")
      topn(sort="simval desc,famn asc", offset=1, fetch=1)
        nljoin(condition="true", type="inner")
          logicalview(tables="optest_0001.ps_result_cache_entity", sql="select `pn`, `an`, `famn`, `dbname`, `simval` from `ps_result_cache_entity` as `ps_result_cache_entity` where (((`uid` = 1) and (`task_id` = 1)) and (`uid` = `task_id`))")
          filter(condition="1 = 1")
            values(table="dual")

- sql: |
    SELECT PN,AN,FAMN,DBNAME,SIMVAL,(@i := @i + 1) sortNo FROM PS_RESULT_CACHE_ENTITY,(select @i :=1) b   WHERE 1=1 ORDER BY SIMVAL DESC,FAMN    LIMIT 1,1;
  plan: |
    project(pn="pn", an="an", famn="famn", dbname="dbname", simval="simval", sortno="@i := @i + 1")
      topn(sort="simval desc,famn asc", offset=1, fetch=1)
        nljoin(condition="true", type="inner")
          gather(concurrent=true)
            logicalview(tables="[0000-0003].ps_result_cache_entity", shardcount=4, sql="select `pn`, `an`, `famn`, `dbname`, `simval` from `ps_result_cache_entity` as `ps_result_cache_entity`")
          filter(condition="1 = 1")
            values(table="dual")